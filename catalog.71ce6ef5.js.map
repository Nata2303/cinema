{"mappings":"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","sources":["src/js/search.js","src/js/catalog.js"],"sourcesContent":["import { searchRequest } from './apikey';\nimport { upcomingMovieGenreRequest } from './apikey';\nimport Notiflix from 'notiflix';\nimport { renderCatalog } from './catalog';\nimport { dayTrend } from './catalog';\nimport { paginationContainer } from './catalog';\nimport { formatPageNumber } from './catalog';\nimport { addEllipsis } from './catalog';\n\nlet genres;\nlet currentPage = 1;\nlet movieRequest;\n\nconst searchForm = document.querySelector('.catalog-form');\nconst filmSearchList = document.querySelector('.js-catalog-search');\nconst yearSelect = document.querySelector('#js-search-select');\n\nconsole.log(searchForm);\nconsole.log(filmSearchList);\n\nfunction createSelect() {\n  const currentYear = new Date().getFullYear();\n\n  for (let i = 1940; i <= currentYear; i++) {\n    const option = document.createElement('option');\n    option.classList.add('selectOption');\n    option.value = i;\n    option.text = i;\n    yearSelect.appendChild(option);\n  }\n}\n\ncreateSelect();\n\nsearchForm.addEventListener('submit', handleSearch);\n\nasync function handleSearch(evt) {\n  try {\n    evt.preventDefault();\n\n    genres = {};\n\n    formEvt = evt.currentTarget.elements.catalogSearchQuery.value;\n    formYear = evt.currentTarget.elements.select.value;\n\n    const movieRequest = await searchRequest(formEvt, formYear, currentPage);\n    const genresData = await upcomingMovieGenreRequest();\n\n    genresData.forEach(genre => {\n      genres[genre.id] = genre.name;\n    });\n\n    if (formEvt.length > 1) {\n      dayTrend.innerHTML = '';\n      renderCatalog(movieRequest.results, genres);\n      console.log(movieRequest.results);\n    }\n\n    const movieTotalPages = movieRequest.total_pages;\n    setupPagination(movieTotalPages);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction setupPagination(movieTotalPages) {\n  let totalPages = movieTotalPages;\n\n  paginationContainer.innerHTML = '';\n\n  const maxVisiblePages = 5; // Максимальное количество видимых страниц, включая символ \"...\"\n  const halfVisiblePages = Math.floor(maxVisiblePages / 2);\n\n  let startPage = Math.max(currentPage - halfVisiblePages, 1);\n  let endPage = Math.min(startPage + maxVisiblePages - 1, totalPages);\n\n  if (endPage - startPage + 1 < maxVisiblePages) {\n    startPage = Math.max(endPage - maxVisiblePages + 1, 1);\n  }\n\n  if (currentPage > 1) {\n    addPrevPageLink(); // Добавляем стрелку \"<\" для перехода на предыдущую страницу\n  }\n\n  if (startPage > 1) {\n    addPageLink(1); // Добавляем ссылку на первую страницу\n    if (startPage > 2) {\n      addEllipsis(); // Добавляем символ \"...\" для скрытых страниц\n    }\n  }\n\n  for (let i = startPage; i <= endPage; i++) {\n    addPageLink(i); // Добавляем ссылки на видимые страницы\n  }\n\n  if (endPage < totalPages) {\n    if (endPage < totalPages - 1) {\n      addEllipsis(); // Добавляем символ \"...\" для скрытых страниц\n    }\n    addPageLink(totalPages); // Добавляем ссылку на последнюю страницу\n  }\n\n  if (currentPage < totalPages) {\n    addNextPageLink(); // Добавляем стрелку \">\" для перехода на следующую страницу\n  }\n}\n\nfunction addPageLink(pageNumber) {\n  const pageDiv = document.createElement('div');\n  pageDiv.classList.add('page-number');\n  const pageLink = document.createElement('a');\n  pageLink.classList = 'catalog-pagination-link';\n  pageLink.href = '#';\n  pageLink.textContent = formatPageNumber(pageNumber);\n\n  if (pageNumber === currentPage) {\n    pageLink.classList.add('active');\n    pageDiv.classList.add('active');\n  }\n\n  pageLink.addEventListener('click', async function () {\n    currentPage = pageNumber;\n    console.log(currentPage);\n    movieRequest = await searchRequest(formEvt, formYear, currentPage);\n    renderCatalog(movieRequest.results, genres);\n    setupPagination(movieRequest.total_pages);\n  });\n\n  pageDiv.appendChild(pageLink);\n  paginationContainer.appendChild(pageDiv);\n}\n\nfunction addPrevPageLink() {\n  const prevPageLink = document.createElement('a');\n  prevPageLink.href = '#';\n  prevPageLink.textContent = '<';\n  prevPageLink.addEventListener('click', async function () {\n    currentPage -= 1;\n    console.log(currentPage);\n    const movieRequest = await searchRequest(formEvt, formYear, currentPage);\n    renderCatalog(movieRequest.results, genres);\n    setupPagination(movieRequest.total_pages);\n  });\n  paginationContainer.appendChild(prevPageLink);\n}\n\nfunction addNextPageLink() {\n  const nextPageLink = document.createElement('a');\n  nextPageLink.href = '#';\n  nextPageLink.textContent = '>';\n  nextPageLink.addEventListener('click', async function () {\n    currentPage += 1;\n    console.log(currentPage);\n    const movieRequest = await searchRequest(formEvt, formYear, currentPage);\n    renderCatalog(movieRequest.results, genres);\n    setupPagination(movieRequest.total_pages);\n  });\n  paginationContainer.appendChild(nextPageLink);\n}\n","import { trendMovieRequest } from './apikey.js';\nimport { upcomingMovieGenreRequest } from './apikey.js';\n\nexport const dayTrend = document.querySelector('.catalog-js');\nexport const paginationContainer = document.querySelector(\n  '.pagination-container'\n);\nlet currentPage = 1;\nlet trendData;\nlet genres;\n\n///////////\n\n///////////\n\nexport async function initCatalogFetch() {\n  try {\n    genres = {};\n    trendData = await trendMovieRequest(currentPage);\n    const genresData = await upcomingMovieGenreRequest();\n\n    genresData.forEach(genre => {\n      genres[genre.id] = genre.name;\n    });\n\n    renderCatalog(trendData.results, genres);\n\n    setupPagination();\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction setupPagination() {\n  let totalPages = trendData.total_pages;\n  paginationContainer.innerHTML = '';\n\n  const maxVisiblePages = 5; // Максимальное количество видимых страниц, включая символ \"...\"\n  const halfVisiblePages = Math.floor(maxVisiblePages / 2);\n\n  let startPage = Math.max(currentPage - halfVisiblePages, 1);\n  let endPage = Math.min(startPage + maxVisiblePages - 1, totalPages);\n\n  if (endPage - startPage + 1 < maxVisiblePages) {\n    startPage = Math.max(endPage - maxVisiblePages + 1, 1);\n  }\n\n  if (currentPage > 1) {\n    addPrevPageLink(); // Добавляем стрелку \"<\" для перехода на предыдущую страницу\n  }\n\n  if (startPage > 1) {\n    addPageLink(1); // Добавляем ссылку на первую страницу\n    if (startPage > 2) {\n      addEllipsis(); // Добавляем символ \"...\" для скрытых страниц\n    }\n  }\n\n  for (let i = startPage; i <= endPage; i++) {\n    addPageLink(i); // Добавляем ссылки на видимые страницы\n  }\n\n  if (endPage < totalPages) {\n    if (endPage < totalPages - 1) {\n      addEllipsis(); // Добавляем символ \"...\" для скрытых страниц\n    }\n    addPageLink(totalPages); // Добавляем ссылку на последнюю страницу\n  }\n\n  if (currentPage < totalPages) {\n    addNextPageLink(); // Добавляем стрелку \">\" для перехода на следующую страницу\n  }\n}\n\nfunction addPageLink(pageNumber) {\n  const pageDiv = document.createElement('div');\n  pageDiv.classList.add('page-number');\n  const pageLink = document.createElement('a');\n  pageLink.classList = 'catalog-pagination-link';\n  pageLink.href = '#';\n  pageLink.textContent = formatPageNumber(pageNumber);\n\n  if (pageNumber === currentPage) {\n    pageLink.classList.add('active');\n    pageDiv.classList.add('active');\n  }\n\n  pageLink.addEventListener('click', async function () {\n    currentPage = pageNumber;\n    console.log(currentPage);\n    trendData = await trendMovieRequest(currentPage);\n    renderCatalog(trendData.results, genres);\n    setupPagination(trendData.total_pages);\n  });\n\n  pageDiv.appendChild(pageLink);\n  paginationContainer.appendChild(pageDiv);\n}\n\nexport function formatPageNumber(pageNumber) {\n  // Добавляем ведущий ноль, если номер страницы меньше 10\n  return pageNumber < 10 ? `0${pageNumber}` : pageNumber.toString();\n}\n\nexport function addEllipsis() {\n  const ellipsisSpan = document.createElement('span');\n  ellipsisSpan.textContent = '...';\n  paginationContainer.appendChild(ellipsisSpan);\n}\n\nfunction addPrevPageLink() {\n  const prevPageLink = document.createElement('a');\n  prevPageLink.href = '#';\n  prevPageLink.textContent = '<';\n  prevPageLink.addEventListener('click', async function () {\n    currentPage -= 1;\n    console.log(currentPage);\n    trendData = await trendMovieRequest(currentPage);\n    renderCatalog(trendData.results, genres);\n    setupPagination(trendData.total_pages);\n  });\n  paginationContainer.appendChild(prevPageLink);\n}\n\nfunction addNextPageLink() {\n  const nextPageLink = document.createElement('a');\n  nextPageLink.href = '#';\n  nextPageLink.textContent = '>';\n  nextPageLink.addEventListener('click', async function () {\n    currentPage += 1;\n    console.log(currentPage);\n    trendData = await trendMovieRequest(currentPage);\n    renderCatalog(trendData.results, genres);\n    setupPagination(trendData.total_pages);\n  });\n  paginationContainer.appendChild(nextPageLink);\n}\n\nexport function renderCatalog(arr, genres) {\n  dayTrend.innerHTML = ''; // Clear the container\n\n  const htmlMarkup = catalogTrendMarkup(arr, genres);\n  dayTrend.insertAdjacentHTML('beforeend', htmlMarkup);\n}\n\nexport function catalogTrendMarkup(arr, genres) {\n  return arr\n    .map(movie => {\n      const {\n        release_date,\n        backdrop_path,\n        genre_ids,\n        title,\n        vote_average,\n        name,\n        poster_path,\n      } = movie;\n\n      const genreSlice = genre_ids;\n\n      const genreNames = genreSlice\n        .map(genreId => {\n          return genres[genreId];\n        })\n        .join(', ');\n\n      //с бэкэнда на некоторые фильмы приходит не title, а name\n      let filmName;\n      if (!title) {\n        filmName = name;\n      } else {\n        filmName = title;\n      }\n\n      let release = release_date.slice(0, 4);\n      if (!release || release === '') {\n        release = 'unknown';\n      }\n\n      let poster;\n      if (!backdrop_path && !poster_path) {\n        poster = '/vL5LR6WdxWPjLPFRLe133jXWsh5.jpg';\n      } else if (!backdrop_path) {\n        poster = poster_path;\n      } else {\n        poster = backdrop_path;\n      }\n\n      return `<div class=\"library-container-item\">\n                <div class=\"library-container-img\" style=\"background-image: url(https://image.tmdb.org/t/p/original${poster});\">\n                <div class=\"rating-libr rating-library\">\n                        <div class=\"rating-body\">\n                            <div class=\"rating-active\" style=\"width: ${convertRatingToPercentage(\n                              vote_average\n                            )}%;\"></div>\n                            <div class=\"rating-items\">\n                                <input type=\"radio\" class=\"reting-item\" value=\"1\" name=\"rating\"></>\n                                <input type=\"radio\" class=\"reting-item\" value=\"2\" name=\"rating\"></>\n                                <input type=\"radio\" class=\"reting-item\" value=\"3\" name=\"rating\"></>\n                                <input type=\"radio\" class=\"reting-item\" value=\"4\" name=\"rating\"></>\n                                <input type=\"radio\" class=\"reting-item\" value=\"5\" name=\"rating\"></>\n                            </div>\n                            </div>\n                        </div>\n                    <div class=\"library-container-about\">\n                        <h3 class=\"library-movie-title\">${filmName}</h3>     \n                        <span class=\"library-genre-title\">${genreNames}</span><span class=\"library-genre-title\"> | ${release}</span>   \n                    </div> \n            </div>\n            </div>\n        </div>`;\n    })\n    .join('');\n}\n\ninitCatalogFetch();\n\nexport function convertRatingToPercentage(rating) {\n  // Перетворюємо рейтинг у відсотки\n  const percentage = (rating / 10) * 100;\n\n  // Округлюємо значення до двох знаків після коми\n  const roundedPercentage = Math.round(percentage * 100) / 100;\n\n  return roundedPercentage;\n}\n"],"names":["$3iMKl","parcelRequire","$9f350005b1f9b186$export$65b190bf57aeec48","document","querySelector","$9f350005b1f9b186$export$5dd819bdfbc7b15d","$9f350005b1f9b186$var$trendData","$9f350005b1f9b186$var$genres","$b18fd23e9761f35d$var$genres","$9f350005b1f9b186$var$currentPage","$9f350005b1f9b186$var$setupPagination","totalPages","total_pages","innerHTML","halfVisiblePages","Math","floor","maxVisiblePages","startPage","max","endPage","min","prevPageLink","createElement","href","textContent","addEventListener","async","console","log","trendMovieRequest","$9f350005b1f9b186$export$6d2cdb15d4f6744","results","appendChild","$9f350005b1f9b186$var$addPrevPageLink","$9f350005b1f9b186$var$addPageLink","$9f350005b1f9b186$export$92eb9173bebbaa4a","i","nextPageLink","$9f350005b1f9b186$var$addNextPageLink","pageNumber","pageDiv","classList","add","pageLink","$9f350005b1f9b186$export$6fdc1d5fc92215b9","toString","ellipsisSpan","arr","genres1","htmlMarkup","genres2","map","movie","release_date","backdrop_path","genre_ids","title","vote_average","name","poster_path","genreNames","genreId","join","filmName","poster","release","slice","rating","percentage","round","$9f350005b1f9b186$export$ee3a79a376c3be13","$9f350005b1f9b186$export$8a70c9415fcb563f","insertAdjacentHTML","upcomingMovieGenreRequest","forEach","genre","id","err","$9f350005b1f9b186$export$ac223bdbc578cc64","$b18fd23e9761f35d$var$movieRequest","$b18fd23e9761f35d$var$currentPage","$b18fd23e9761f35d$var$searchForm","$b18fd23e9761f35d$var$filmSearchList","$b18fd23e9761f35d$var$yearSelect","$b18fd23e9761f35d$var$setupPagination","movieTotalPages","movieRequest2","searchRequest","formEvt","formYear","$b18fd23e9761f35d$var$addPrevPageLink","$b18fd23e9761f35d$var$addPageLink","movieRequest3","$b18fd23e9761f35d$var$addNextPageLink","currentYear","Date","getFullYear","option","value","text","$b18fd23e9761f35d$var$createSelect","evt","preventDefault","currentTarget","elements","catalogSearchQuery","select","movieRequest1","length"],"version":3,"file":"catalog.71ce6ef5.js.map"}