{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAGA,MAAMC,EAAWC,SAASC,cAAc,eACxCC,QAAQC,IAAIJ,GAEZK,iBACE,IACE,IAAIC,EAAS,GAEb,MAAMC,QAAa,EAAAT,EAAAU,qBACnBL,QAAQC,IAAIG,EAAKE,SACjBN,QAAQC,IAAIG,UACa,EAAAT,EAAAY,8BAEdC,SAAQC,IACjBN,EAAOM,EAAMC,IAAMD,EAAME,IAAI,IAO/BX,QAAQC,IAAIE,GAEZN,EAASe,mBACP,YAUN,SAA4BC,EAAKV,GAC/B,OAAOU,EACJC,KAAIC,IACH,MAAMC,aACJA,EAAYC,cACZA,EAAaC,UACbA,EAASC,MACTA,EAAKC,aACLA,EAAYT,KACZA,EAAIU,eACJA,GACEN,EAIEO,EAFaJ,EAAUK,MAAM,EAAG,GAGnCT,KAAIU,GACIrB,EAAOqB,KAEfC,KAAK,MAG4B,IAAhCC,EAOAC,EAOJ,OAVED,EAHGP,GACQR,EASXgB,EAHGX,GACOK,EAKL,4JACwGJ,4LA+B9G,SAAmCW,GAEZ,MAAtBC,EAAaD,EAAU,GAAM,IAKnC,OAF0BE,KAAKC,MAAmB,IAAbF,GAAoB,G,CAjCYG,CACzCZ,6xBAY4BM,0EACEJ,gDAAyDK,EAAQJ,MACrH,EACA,mGAKO,IAEVE,KAAK,G,CAxEJQ,CAAmB7B,EAAKE,QAASH,G,CAInC,MAAO+B,GACPlC,QAAQC,IAAIiC,E,EAsEhBC","sources":["src/js/catalog.js"],"sourcesContent":["import { trendMovieRequest } from './apikey.js';\nimport { upcomingMovieGenreRequest } from './apikey.js';\n\nconst dayTrend = document.querySelector('.catalog-js');\nconsole.log(dayTrend);\n\nasync function initCatalogFetch() {\n  try {\n    let genres = {};\n\n    const data = await trendMovieRequest();\n    console.log(data.results);\n    console.log(data);\n    const genresData = await upcomingMovieGenreRequest();\n\n    genresData.forEach(genre => {\n      genres[genre.id] = genre.name;\n    });\n\n    //   const randomData = Math.floor(Math.random() * data.results.length);\n    //   const randomDataRes = data.results[randomData];\n\n    //   console.log(randomDataRes);\n    console.log(genres);\n\n    dayTrend.insertAdjacentHTML(\n      'beforeend',\n      catalogTrendMarkup(data.results, genres)\n    );\n\n    //   changeClick(randomDataRes.id);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction catalogTrendMarkup(arr, genres) {\n  return arr\n    .map(movie => {\n      const {\n        release_date,\n        backdrop_path,\n        genre_ids,\n        title,\n        vote_average,\n        name,\n        first_air_date,\n      } = movie;\n\n      const genreSlice = genre_ids.slice(0, 2);\n\n      const genreNames = genreSlice\n        .map(genreId => {\n          return genres[genreId];\n        })\n        .join(', ');\n\n      //с бэкэнда на некоторые фильмы приходит не title, а name\n      let filmName;\n      if (!title) {\n        filmName = name;\n      } else {\n        filmName = title;\n      }\n\n      let release;\n      if (!release_date) {\n        release = first_air_date;\n      } else {\n        release = release_date;\n      }\n\n      return `<div class=\"library-container-item\">\n                <div class=\"library-container-img\" style=\"background-image: url(https://image.tmdb.org/t/p/original${backdrop_path});\">\n                <div class=\"rating-libr rating-library\">\n                        <div class=\"rating-body\">\n                            <div class=\"rating-active\" style=\"width: ${convertRatingToPercentage(\n                              vote_average\n                            )}%;\"></div>\n                            <div class=\"rating-items\">\n                                <input type=\"radio\" class=\"reting-item\" value=\"1\" name=\"rating\"></>\n                                <input type=\"radio\" class=\"reting-item\" value=\"2\" name=\"rating\"></>\n                                <input type=\"radio\" class=\"reting-item\" value=\"3\" name=\"rating\"></>\n                                <input type=\"radio\" class=\"reting-item\" value=\"4\" name=\"rating\"></>\n                                <input type=\"radio\" class=\"reting-item\" value=\"5\" name=\"rating\"></>\n                            </div>\n                            </div>\n                        </div>\n                    <div class=\"library-container-about\">\n                        <h3 class=\"library-movie-title\">${filmName}</h3>     \n                        <span class=\"library-genre-title\">${genreNames}</span><span class=\"library-genre-title\"> | ${release.slice(\n        0,\n        4\n      )}</span>   \n                    </div> \n            </div>\n            </div>\n        </div>`;\n    })\n    .join('');\n}\n\ninitCatalogFetch();\n\nexport function convertRatingToPercentage(rating) {\n  // Перетворюємо рейтинг у відсотки\n  const percentage = (rating / 10) * 100;\n\n  // Округлюємо значення до двох знаків після коми\n  const roundedPercentage = Math.round(percentage * 100) / 100;\n\n  return roundedPercentage;\n}\n\n// $('#demo').pagination({\n//   dataSource: [1, 2, 3, 4, 5, 6, 7, ... , 195],\n//   callback: function(data, pagination) {\n//       // template method of yourself\n//       var html = template(data);\n//       dataContainer.html(html);\n//   }\n// })\n"],"names":["$3iMKl","parcelRequire","$9f350005b1f9b186$var$dayTrend","document","querySelector","console","log","async","genres","data","trendMovieRequest","results","upcomingMovieGenreRequest","forEach","genre","id","name","insertAdjacentHTML","arr","map","movie","release_date","backdrop_path","genre_ids","title","vote_average","first_air_date","genreNames","slice","genreId","join","filmName","release","rating","percentage","Math","round","$9f350005b1f9b186$export$ee3a79a376c3be13","$9f350005b1f9b186$var$catalogTrendMarkup","err","$9f350005b1f9b186$var$initCatalogFetch"],"version":3,"file":"catalog.047a929f.js.map"}