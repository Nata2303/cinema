var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},o={},t={},s=e.parcelRequired7c6;null==s&&((s=function(e){if(e in o)return o[e].exports;if(e in t){var s=t[e];delete t[e];var n={id:e,exports:{}};return o[e]=n,s.call(n.exports,n,n.exports),n.exports}var i=new Error("Cannot find module '"+e+"'");throw i.code="MODULE_NOT_FOUND",i}).register=function(e,o){t[e]=o},e.parcelRequired7c6=s);var n=s("3iMKl");n=s("3iMKl");const i=document.querySelector(".upcom-js-list");!async function(){try{let e={};const o=await(0,n.upcomingMovieRequest)();(await(0,n.upcomingMovieGenreRequest)()).forEach((o=>{e[o.id]=o.name}));const t=Math.floor(Math.random()*o.results.length),s=o.results[t];console.log(s),i.insertAdjacentHTML("beforeend",function(e,o){const{release_date:t,vote_average:s,vote_count:n,backdrop_path:i,genre_ids:l,overview:a,title:c,popularity:p}=e,r=l.slice(0,2).map((e=>o[e]));return`<div class="upcoming-container">\n        <img src="https://image.tmdb.org/t/p/original${i}" alt="${c}" class="upcom-img" /> \n        <div class="upcoming-container-about">\n            <h3 class="upcom-movie-title">${c}</h3>\n                <ul class="upcoming-list">\n                    <li class="upcoming-list-item">\n                        <p class="upcom-movie-subtitle">Release date</p>\n                        <p class="upcom-release-date">${t}</p>\n                    </li>\n                    <li class="upcoming-list-item">\n                        <p class="upcom-movie-subtitle">Vote / Votes</p>\n                        <p class="upcom-vote"><span class="vote-span">${s}</span> <span class="slash">&nbsp/&nbsp</span> <span class="vote-span">${n}</span></p>\n                    </li>\n                    <li class="upcoming-list-item">\n                        <p class="upcom-movie-subtitle">Popularity</p>\n                        <p class="upcom-popularity popular">${p.toFixed(1)}</p>\n                    </li>\n                    <li class="upcoming-list-item">\n                        <p class="upcom-movie-subtitle">Genre</p>\n                        <p class="upcom-genre">${r}</p>\n                    </li>\n                </ul>\n                <p class="upcom-movie-about-title">ABOUT</p>\n                <p class="upcom-movie-about">${a}</p>\n                <button type="button" class="upcom-btn isActive">Add to my library</button>\n            </div>\n      </div>`}(s,e)),function(e){const o=document.querySelector(".upcom-btn");o.addEventListener("click",(()=>{o.classList.contains("isActive")?(o.classList.remove("isActive"),o.textContent="Remove from my library",localStorage.setItem("movieId",e),console.log("Movie ID added to localStorage:",e)):(o.classList.add("isActive"),localStorage.removeItem("movieId",e),o.textContent="Add to my library",console.log("Movie ID removed to localStorage:",e))}))}(s.id)}catch(e){console.log(e)}}();
//# sourceMappingURL=index.2d193dec.js.map
