{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,0BAGMC,G,aAAcC,SAASC,cAAc,mB,SAE5BC,I,OAAAA,EAAfC,EAAAN,EAAA,CAAAM,EAAAC,GAAAC,MAAA,SAAAC,I,IAEQC,EAEEC,EAOAC,EACAC,E,kFAVFH,EAAS,G,UAEM,EAAAI,EAAAC,wB,cAAbJ,EAAIK,EAAAC,K,UACe,EAAAH,EAAAI,6B,OAATF,EAAAC,KAELE,SAAQ,SAAAC,GACjBV,EAAOU,EAAMC,IAAMD,EAAME,I,IAGrBV,EAAaW,KAAKC,MAAMD,KAAKE,SAAWd,EAAKe,QAAQC,QACrDd,EAAgBF,EAAKe,QAAQd,GAEnCgB,QAAQC,IAAIhB,GAEZX,EAAY4B,mBACV,YACAC,EAAqBlB,EAAeH,IAGtCsB,EAAYnB,EAAcQ,I,kDAE1BO,QAAQC,IAAGb,EAAAiB,I,2DAvBiBC,MAAAC,KAAAC,U,CA6BhC,SAASL,EAAqBM,EAAK3B,GACjC,IACE4B,EAQED,EARFC,aACAC,EAOEF,EAPFE,aACAC,EAMEH,EANFG,WACAC,EAKEJ,EALFI,cACAC,EAIEL,EAJFK,UACAC,EAGEN,EAHFM,SACAC,EAEEP,EAFFO,MACAC,EACER,EADFQ,WAEIC,EAAaJ,EAAUK,MAAM,EAAG,GAAGC,KAAI,SAAAC,G,OAAWvC,EAAOuC,E,IAAUC,KAAK,MAE9E,MAAO,0FACqEC,OAAvBV,EAAc,WAEbU,OAFsBP,EAAM,mIAM3BO,OAJDP,EAAM,yPAQUO,OAJfb,EAAa,sPAIwFa,OAAtFZ,EAAa,2EAIXY,OAJoFX,EAAW,6PAQ5GW,OAJaN,EAAWO,QAAQ,GAAG,oOAQrCD,OAJEL,EAAW,+LAIJK,OAATR,EAAS,sI,CAMpE,SAASX,EAAYX,GACnB,IAAMgC,EAAclD,SAASC,cAAc,cAE3CiD,EAAYC,iBAAiB,SAAS,WAEpC,GAAID,EAAYE,UAAUC,SAAS,YAAa,CAC9CH,EAAYE,UAAUE,OAAO,YAC7BJ,EAAYK,YAAc,yBAE1B,IAAMC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,GAC5DJ,EAASK,SAAS3C,KACrBsC,EAASM,KAAK5C,GACdyC,aAAaI,QAAQ,WAAYN,KAAKO,UAAUR,KAIlD/B,QAAQC,IAAI,kCAAmCR,E,KAC1C,CACLgC,EAAYE,UAAUa,IAAI,YAC1B,IAAMC,EAAWT,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,GAC3DO,EAAQD,EAASE,QAAQlD,IACjB,IAAViD,IACFD,EAASG,OAAOF,EAAO,GACDR,aAATI,QAAQ,WAAYN,KAAKO,UAAUE,KAIlDhB,EAAYK,YAAc,oBAC1B9B,QAAQC,IAAI,oCAAqCR,E,iBAnGxChB,EAAiB6B,MAAAC,KAAAC,U,CA2BhCqC,E","sources":["src/js/month-trend.js"],"sourcesContent":["import { upcomingMovieGenreRequest } from './apikey.js';\nimport { upcomingMovieRequest } from './apikey.js';\n\nconst upcomingBox = document.querySelector('.upcom-js-list');\n\nasync function initUpcomingFetch() {\n  try {\n    let genres = {};\n\n    const data = await upcomingMovieRequest();\n    const genresData = await upcomingMovieGenreRequest();\n\n    genresData.forEach(genre => {\n      genres[genre.id] = genre.name;\n    });\n\n    const randomData = Math.floor(Math.random() * data.results.length); \n    const randomDataRes = data.results[randomData];\n\n    console.log(randomDataRes);\n\n    upcomingBox.insertAdjacentHTML(\n      'beforeend',\n      createUpcomingMarkup(randomDataRes, genres)\n    );\n\n    changeClick(randomDataRes.id);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\ninitUpcomingFetch();\n\nfunction createUpcomingMarkup(arr, genres) {\n  const {\n    release_date,\n    vote_average,\n    vote_count,\n    backdrop_path,\n    genre_ids,\n    overview,\n    title,\n    popularity,\n  } = arr;\n  const genreNames = genre_ids.slice(0, 2).map(genreId => genres[genreId]).join(', ');\n\n  return `<div class=\"upcoming-container\">\n        <img src=\"https://image.tmdb.org/t/p/original${backdrop_path}\" alt=\"${title}\" class=\"upcom-img\" /> \n        <div class=\"upcoming-container-about\">\n            <h3 class=\"upcom-movie-title light-theme\">${title}</h3>\n                <ul class=\"upcoming-list\">\n                    <li class=\"upcoming-list-item\">\n                        <p class=\"upcom-movie-subtitle light-theme\">Release date</p>\n                        <p class=\"upcom-release-date \">${release_date}</p>\n                    </li>\n                    <li class=\"upcoming-list-item\">\n                        <p class=\"upcom-movie-subtitle light-theme\">Vote / Votes</p>\n                        <p class=\"upcom-vote\"><span class=\"vote-span\">${vote_average}</span> <span class=\"slash\">&nbsp/&nbsp</span> <span class=\"vote-span\">${vote_count}</span></p>\n                    </li>\n                    <li class=\"upcoming-list-item\">\n                        <p class=\"upcom-movie-subtitle light-theme\">Popularity</p>\n                        <p class=\"upcom-popularity popular light-theme\">${popularity.toFixed(1)}</p>\n                    </li>\n                    <li class=\"upcoming-list-item\">\n                        <p class=\"upcom-movie-subtitle light-theme\">Genre</p>\n                        <p class=\"upcom-genre light-theme\">${genreNames}</p>\n                    </li>\n                </ul>\n                <p class=\"upcom-movie-about-title light-theme\">ABOUT</p>\n                <p class=\"light-theme upcom-movie-about\">${overview}</p>\n                <button type=\"button\" class=\"upcom-btn isActive\">Add to my library</button>\n            </div>\n      </div>`;\n}\n\nfunction changeClick(id) {\n  const upcomingBtn = document.querySelector('.upcom-btn');\n\n  upcomingBtn.addEventListener('click', () => {\n    \n    if (upcomingBtn.classList.contains('isActive')) {\n      upcomingBtn.classList.remove('isActive');\n      upcomingBtn.textContent = \"Remove from my library\";\n      \n      const movieIds = JSON.parse(localStorage.getItem('movieIds')) || [];\n      if (!movieIds.includes(id)) { // проверяем, есть ли id фильма уже в массиве\n        movieIds.push(id);\n        localStorage.setItem('movieIds', JSON.stringify(movieIds)); // сохраняем обновленный массив в localStorage\n      }\n\n      // localStorage.setItem('movieId', id);\n      console.log('Movie ID added to localStorage:', id);\n    } else {\n      upcomingBtn.classList.add('isActive');\n      const movieIds = JSON.parse(localStorage.getItem('movieIds')) || [];\n      const index = movieIds.indexOf(id);\n      if (index !== -1) { // проверяем, есть ли id фильма в массиве\n        movieIds.splice(index, 1); // удаляем id фильма из массива\n        localStorage.setItem('movieIds', JSON.stringify(movieIds)); // сохраняем обновленный массив в localStorage\n      }\n\n      // localStorage.removeItem('movieId', id);\n      upcomingBtn.textContent = \"Add to my library\";\n      console.log('Movie ID removed to localStorage:', id);\n    }\n  });\n}"],"names":["$bpxeT","parcelRequire","$7164b7090fd99405$var$upcomingBox","document","querySelector","$7164b7090fd99405$var$_initUpcomingFetch","$parcel$interopDefault","$2TvXO","mark","_callee","genres","data","randomData","randomDataRes","$hDMWd","upcomingMovieRequest","_ctx","sent","upcomingMovieGenreRequest","forEach","genre","id","name","Math","floor","random","results","length","console","log","insertAdjacentHTML","$7164b7090fd99405$var$createUpcomingMarkup","$7164b7090fd99405$var$changeClick","t0","apply","this","arguments","arr","release_date","vote_average","vote_count","backdrop_path","genre_ids","overview","title","popularity","genreNames","slice","map","genreId","join","concat","toFixed","upcomingBtn","addEventListener","classList","contains","remove","textContent","movieIds","JSON","parse","localStorage","getItem","includes","push","setItem","stringify","add","movieIds1","index","indexOf","splice","$7164b7090fd99405$var$initUpcomingFetch"],"version":3,"file":"index.f439965c.js.map"}