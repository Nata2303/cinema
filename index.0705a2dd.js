var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},t={},o={},s=e.parcelRequired7c6;null==s&&((s=function(e){if(e in t)return t[e].exports;if(e in o){var s=o[e];delete o[e];var n={id:e,exports:{}};return t[e]=n,s.call(n.exports,n,n.exports),n.exports}var i=new Error("Cannot find module '"+e+"'");throw i.code="MODULE_NOT_FOUND",i}).register=function(e,t){o[e]=t},e.parcelRequired7c6=s);var n=s("3iMKl");n=s("3iMKl");const i=document.querySelector(".upcom-js-list");!async function(){try{let e={};const t=await(0,n.upcomingMovieRequest)();(await(0,n.upcomingMovieGenreRequest)()).forEach((t=>{e[t.id]=t.name}));const o=Math.floor(Math.random()*t.results.length),s=t.results[o];console.log(s),i.insertAdjacentHTML("beforeend",function(e,t){const{release_date:o,vote_average:s,vote_count:n,backdrop_path:i,genre_ids:l,overview:a,title:c,popularity:p}=e,r=l.slice(0,2).map((e=>t[e]));return`<div class="upcoming-container">\n        <img src="https://image.tmdb.org/t/p/original${i}" alt="${c}" class="upcom-img" /> \n        <div class="upcoming-container-about">\n            <h3 class="upcom-movie-title">${c}</h3>\n                <ul class="upcoming-list">\n                    <li class="upcoming-list-item">\n                        <p class="upcom-movie-subtitle">Release date</p>\n                        <p class="upcom-release-date">${o}</p>\n                    </li>\n                    <li class="upcoming-list-item">\n                        <p class="upcom-movie-subtitle">Vote / Votes</p>\n                        <p class="upcom-vote"><span class="vote-span">${s}</span> <span class="slash">&nbsp/&nbsp</span> <span class="vote-span">${n}</span></p>\n                    </li>\n                    <li class="upcoming-list-item">\n                        <p class="upcom-movie-subtitle">Popularity</p>\n                        <p class="upcom-popularity popular">${p.toFixed(1)}</p>\n                    </li>\n                    <li class="upcoming-list-item">\n                        <p class="upcom-movie-subtitle">Genre</p>\n                        <p class="upcom-genre">${r}</p>\n                    </li>\n                </ul>\n                <p class="upcom-movie-about-title">ABOUT</p>\n                <p class="upcom-movie-about">${a}</p>\n                <button type="button" class="upcom-btn isActive">Add to my library</button>\n            </div>\n      </div>`}(s,e)),function(e){const t=document.querySelector(".upcom-btn");t.addEventListener("click",(()=>{if(t.classList.contains("isActive")){t.classList.remove("isActive"),t.textContent="Remove from my library";const o=JSON.parse(localStorage.getItem("movieIds"))||[];o.includes(e)||(o.push(e),localStorage.setItem("movieIds",JSON.stringify(o))),console.log("Movie ID added to localStorage:",e)}else{t.classList.add("isActive");const o=JSON.parse(localStorage.getItem("movieIds"))||[],s=o.indexOf(e);-1!==s&&(o.splice(s,1),localStorage.setItem("movieIds",JSON.stringify(o))),t.textContent="Add to my library",console.log("Movie ID removed to localStorage:",e)}}))}(s.id)}catch(e){console.log(e)}}();
//# sourceMappingURL=index.0705a2dd.js.map
