{"mappings":"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","sources":["src/js/weekly-trends.js"],"sourcesContent":["import axios from 'axios';\nconst date = new Date();\nlet genreNames = [];\nlet genreNames2 = [];\nlet genreNames3 = [];\nlet hewgGenreNames = '';\nlet hewgGenreNames2 = '';\nlet hewgGenreNames3 = '';\nconst screenWidth = window.innerWidth;\n\nasync function serviseFilm() {\n  try {\n    const URL =\n      'https://api.themoviedb.org/3/trending/movie/week?language=en-US';\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlOGFlZjVlODMzOTZmYmViNmY2MmU4NmNmZmViYjk4MSIsInN1YiI6IjY0ODIzMjcxZDJiMjA5MDBlYmJmM2Y5OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VO3Y1F5-wzOGPgGegX0KKGPSKeCvq8s50R1CV3r3ln0',\n      },\n    };\n    const response = await axios.get(`${URL}`, options);\n    if (response.status !== 200) {\n      throw new Error(response.status);\n    }\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst list = document.querySelector('.weekly-trends-card-list');\nconst ratindg = document.querySelector('.rating-active');\n\nserviseFilm().then(data => {\n  // console.log(data.results);\n  const film = data.results[8];\n  const { id, title, poster_path, release_date, vote_average, genre_ids } =\n    film;\n\n  const ratingInPercent = convertRatingToPercentage(vote_average);\n  console.log(ratingInPercent);\n\n  serviseGenre()\n    .then(genresData => {\n      const genre = document.querySelector('.genre');\n\n      for (const genreData of genresData) {\n        if (genre_ids.includes(genreData.id)) {\n          genreNames.push(genreData.name);\n        }\n      }\n      hewgGenreNames = genreNames.join(', ');\n      genre.textContent = `${hewgGenreNames}`;\n    })\n    .catch(err => console.log(err));\n\n  const markup = `<li class=\"card-film\"><div class=\"card-container\">\n  <img src = \"https://image.tmdb.org/t/p/w500${poster_path}\" alt = \"${title}\" class=\"weekly-trends-film-img\">\n  <div class=\"film-info-poster\">\n  <h3 class=\"weekly-trends-film-title\">${title}</h3><div class=\"weekly-trends-info\">\n  <span class=\"genre\">${hewgGenreNames}</span>\n  <span>|</span>\n  <span>${date.getFullYear(release_date)}</span></div></div>\n  <div class=\"rating weekly-trends-film-rating\"><div class=\"rating-body\">\n  <div class=\"rating-active\" style=\"width: ${ratingInPercent}%;\"></div>\n  <div class=\"rating-items\">\n        <input type=\"radio\" class=\"reting-item\" value=\"1\" name=\"rating\">\n        <input type=\"radio\" class=\"reting-item\" value=\"2\" name=\"rating\">\n        <input type=\"radio\" class=\"reting-item\" value=\"3\" name=\"rating\">\n        <input type=\"radio\" class=\"reting-item\" value=\"4\" name=\"rating\">\n        <input type=\"radio\" class=\"reting-item\" value=\"5\" name=\"rating\">\n    </div>\n</div>\n</div>\n</div>\n</li>`;\n  list.insertAdjacentHTML('beforeend', markup);\n\n  if (screenWidth >= 768) {\n    const film2 = data.results[12];\n    const id2 = film2.id;\n    const title2 = film2.title;\n    const poster_path2 = film2.poster_path;\n    const release_date2 = film2.release_date;\n    const vote_average2 = film2.vote_average;\n    const genre_ids2 = film2.genre_ids;\n\n    const ratingInPercent2 = convertRatingToPercentage(vote_average2);\n\n    console.log(ratingInPercent2);\n\n    serviseGenre()\n      .then(genresData => {\n        const genre2 = document.querySelector('.genre2');\n\n        for (const genreData of genresData) {\n          if (genre_ids2.includes(genreData.id)) {\n            genreNames2.push(genreData.name);\n          }\n        }\n        hewgGenreNames2 = genreNames2.join(', ');\n        genre2.textContent = `${hewgGenreNames2}`;\n      })\n      .catch(err => console.log(err));\n\n    const markup2 = `<li class=\"card-film\"><div class=\"card-container\">\n      <img src = \"https://image.tmdb.org/t/p/w500${poster_path2}\" alt = \"${title2}\" class=\"weekly-trends-film-img\">\n      <div class=\"film-info-poster\">\n      <h3 class=\"weekly-trends-film-title\">${title2}</h3><div class=\"weekly-trends-info\">\n      <span class=\"genre2\">${hewgGenreNames2}</span>\n      <span>|</span>\n      <span>${date.getFullYear(release_date2)}</span></div></div>\n      <div class=\"rating weekly-trends-film-rating\"><div class=\"rating-body\">\n      <div class=\"rating-active\" style=\"width: ${ratingInPercent2}%;\"></div>\n      <div class=\"rating-items\">\n            <input type=\"radio\" class=\"reting-item\" value=\"1\" name=\"rating\"></>\n            <input type=\"radio\" class=\"reting-item\" value=\"2\" name=\"rating\"></>\n            <input type=\"radio\" class=\"reting-item\" value=\"3\" name=\"rating\"></>\n            <input type=\"radio\" class=\"reting-item\" value=\"4\" name=\"rating\"></>\n            <input type=\"radio\" class=\"reting-item\" value=\"5\" name=\"rating\"></>\n        </div>\n    </div>\n    </div>\n    </div>\n    </li>`;\n    list.insertAdjacentHTML('beforeend', markup2);\n    // list.insertAdjacentHTML('beforeend', markup);\n    // list.innerHTML = markup2;\n\n    const film3 = data.results[2];\n\n    const id3 = film3.id;\n    const title3 = film3.title;\n    const poster_path3 = film3.poster_path;\n    const release_date3 = film3.release_date;\n    const vote_average3 = film3.vote_average;\n    const genre_ids3 = film3.genre_ids;\n\n    const ratingInPercent3 = convertRatingToPercentage(vote_average3);\n    console.log(ratingInPercent3);\n\n    serviseGenre()\n      .then(genresData => {\n        const genre3 = document.querySelector('.genre3');\n\n        for (const genreData of genresData) {\n          if (genre_ids3.includes(genreData.id)) {\n            genreNames3.push(genreData.name);\n          }\n        }\n        hewgGenreNames3 = genreNames3.join(', ');\n        genre3.textContent = `${hewgGenreNames3}`;\n      })\n      .catch(err => console.log(err));\n\n    const markup3 = `<li class=\"card-film\"><div class=\"card-container\">\n      <img src = \"https://image.tmdb.org/t/p/w500${poster_path3}\" alt = \"${title3}\" class=\"weekly-trends-film-img\">\n      <div class=\"film-info-poster\">\n      <h3 class=\"weekly-trends-film-title\">${title3}</h3><div class=\"weekly-trends-info\">\n      <span class=\"genre3\">${hewgGenreNames3}</span>\n      <span>|</span>\n      <span>${date.getFullYear(release_date3)}</span></div></div>\n      <div class=\"rating weekly-trends-film-rating\"><div class=\"rating-body\">\n      <div class=\"rating-active\" style=\"width: ${ratingInPercent3}%;\"></div>\n      <div class=\"rating-items\">\n            <input type=\"radio\" class=\"reting-item\" value=\"1\" name=\"rating\"></>\n            <input type=\"radio\" class=\"reting-item\" value=\"2\" name=\"rating\"></>\n            <input type=\"radio\" class=\"reting-item\" value=\"3\" name=\"rating\"></>\n            <input type=\"radio\" class=\"reting-item\" value=\"4\" name=\"rating\"></>\n            <input type=\"radio\" class=\"reting-item\" value=\"5\" name=\"rating\"></>\n        </div>\n    </div>\n    </div>\n    </div>\n    </li>`;\n    list.insertAdjacentHTML('beforeend', markup3);\n  }\n});\n\n//   Зірочки\nconst ratings = document.querySelectorAll('.rating');\nif (ratings.length > 0) {\n  initRatings();\n}\n\nfunction initRatings() {\n  let ratingActive, ratingValue;\n  for (let i = 0; i < ratings.length; i++) {\n    const rating = ratings[i];\n    initRating(rating);\n  }\n}\n\nfunction initRating(rating) {\n  initRatingVars(rating);\n  setRetingActiveWidth();\n}\n\nfunction initRatingVars(rating) {\n  ratingActive = rating.querySelector('.rating-active');\n  ratingValue = rating.querySelector('.rating-value');\n}\n\nfunction setRetingActiveWidth(index = ratingValue.innerHTML) {\n  const ratingActiveWidth = parseFloat(ratingValue.innerHTML) / 0.05;\n  ratingActive.style.width = `${ratingActiveWidth}%`;\n}\n\nfunction convertRatingToPercentage(rating) {\n  // Перетворюємо рейтинг у відсотки\n  const percentage = (rating / 10) * 100;\n\n  // Округлюємо значення до двох знаків після коми\n  const roundedPercentage = Math.round(percentage * 100) / 100;\n\n  return roundedPercentage;\n}\n\n// Жанри\nasync function serviseGenre() {\n  try {\n    const URL = 'https://api.themoviedb.org/3/genre/movie/list?language=en';\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlOGFlZjVlODMzOTZmYmViNmY2MmU4NmNmZmViYjk4MSIsInN1YiI6IjY0ODIzMjcxZDJiMjA5MDBlYmJmM2Y5OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VO3Y1F5-wzOGPgGegX0KKGPSKeCvq8s50R1CV3r3ln0',\n      },\n    };\n    const response = await axios.get(`${URL}`, options);\n    const genresData = response.data.genres;\n    return genresData;\n  } catch (err) {\n    console.log(err);\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$fe3a3a1ac89f0559$var$date","Date","$fe3a3a1ac89f0559$var$genreNames","$fe3a3a1ac89f0559$var$genreNames2","$fe3a3a1ac89f0559$var$genreNames3","$fe3a3a1ac89f0559$var$hewgGenreNames","$fe3a3a1ac89f0559$var$hewgGenreNames2","$fe3a3a1ac89f0559$var$hewgGenreNames3","$fe3a3a1ac89f0559$var$screenWidth","window","innerWidth","$fe3a3a1ac89f0559$var$_serviseFilm","$parcel$interopDefault","$2TvXO","mark","_callee","options","response","data","method","headers","accept","Authorization","$dIxxU","default","get","concat","_ctx","sent","status","Error","console","log","t0","apply","this","arguments","$fe3a3a1ac89f0559$var$list","document","querySelector","$fe3a3a1ac89f0559$var$serviseFilm","then","film","results","title","id","poster_path","release_date","vote_average","genre_ids","ratingInPercent","$fe3a3a1ac89f0559$var$convertRatingToPercentage","$fe3a3a1ac89f0559$var$serviseGenre","genresData","genre","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","genreData","value","includes","push","name","err","return","join","textContent","catch","markup","getFullYear","insertAdjacentHTML","film2","title2","poster_path2","release_date2","vote_average2","genre_ids2","ratingInPercent2","genre2","markup2","film3","title3","poster_path3","release_date3","vote_average3","genre_ids3","ratingInPercent3","genre3","markup3","$fe3a3a1ac89f0559$var$ratings","querySelectorAll","$fe3a3a1ac89f0559$var$initRating","rating","ratingActive","ratingValue","$fe3a3a1ac89f0559$var$initRatingVars","length","innerHTML","ratingActiveWidth","parseFloat","style","width","$fe3a3a1ac89f0559$var$setRetingActiveWidth","percentage","Math","round","$fe3a3a1ac89f0559$var$_serviseGenre","genres","i","$fe3a3a1ac89f0559$var$initRatings"],"version":3,"file":"index.6b32c0d1.js.map"}