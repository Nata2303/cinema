{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,kDAIA,IAAMC,EAAOC,SAASC,cAAc,4BAC9BC,EAAO,IAAIC,KAEXC,EAAcC,OAAOC,W,SAGZC,I,OAAAC,EAAmBC,MAAAC,KAAAC,U,UAAnBH,I,OAAAA,EAAfI,EAAAf,EAAA,CAAAe,EAAAC,GAAAC,MAAA,SAAAC,I,IAEUC,E,2FAAiBC,EAAAC,IAAIC,IACzB,+D,cADIH,EAAQI,EAAAC,K,kBAGPL,EAASM,M,gCAEhBC,QAAQC,IAAGJ,EAAAK,I,0DAPmBhB,MAAAC,KAAAC,U,UAYnBe,I,OAAAA,EAAfd,EAAAf,EAAA,CAAAe,EAAAC,GAAAC,MAAA,SAAAC,I,IAEQY,EAEEL,EAQEM,EAOAC,E,kFAjBJF,EAAS,G,SAEMpB,I,cAAbe,EAAIF,EAAAC,K,UACe,EAAAS,EAAAC,6B,OAATX,EAAAC,KAELW,SAAQ,SAAAC,GACjBN,EAAOM,EAAMC,IAAMD,EAAME,I,IAGvB/B,GAAe,KACXwB,EAAQN,EAAKc,QAAQC,MAAM,EAAG,GACpCd,QAAQC,IAAII,GACZ7B,EAAKuC,mBACH,YACAC,EAAyBX,EAAOD,MAG5BE,EAAQP,EAAKc,QAAQC,MAAM,EAAG,GACpCd,QAAQC,IAAIK,GACZ9B,EAAKuC,mBACH,YACAC,EAAyBV,EAAOF,K,kDAIpCJ,QAAQC,IAAGJ,EAAAK,I,2DA3BqBhB,MAAAC,KAAAC,U,CAkC5B,SAAC4B,EAAyBC,EAAKb,GACrC,OAAOa,EACJC,KACC,SAAAC,GACIA,EAAFR,G,IAmEAS,EAlEAC,EAAKF,EAALE,MACAC,EAAWH,EAAXG,YACAC,EAAYJ,EAAZI,aACAC,EAAYL,EAAZK,aACAC,EAASN,EAATM,U,MACI,kGACwDC,OAAvBJ,EAAY,aAGlBI,OAH6BL,EAAM,6IAIpDK,OADiBL,EAAM,+DAMrCK,OALcD,EACbX,MAAM,EAAG,GACTI,KAAI,SAAAS,G,OAAWvB,EAAOuB,E,IACtBC,KAAK,MAAM,mCAIuBF,OAFnC/C,EAAKkD,YAAYN,GAAc,2IAI/BG,QA+CAN,EAhDAI,EAgDuB,GAAM,IAGTM,KAAKC,MAAmB,IAAbX,GAAoB,KAlDnD,0Z,IAaHQ,KAAK,G,aAvEKzB,EAAqBjB,MAAAC,KAAAC,U,CA+BpC4C,GA4CO,IAADC,EAAUxD,SAASyD,iBAAiB,WAa1C,SAASC,EAAWC,IAKpB,SAAwBA,GACtBC,aAAeD,EAAO1D,cAAc,kBACpC4D,YAAcF,EAAO1D,cAAc,gB,CANnC6D,CAAeH,GASjB,WAA8BhD,UAAAoD,OAAA,YAAApD,UAAA,IAAQkD,YAAYG,U,IAC1CC,EAAoBC,WAAWL,YAAYG,WAAa,IAC9DJ,aAAaO,MAAMC,MAAQ,GAAqBnB,OAAlBgB,EAAkB,I,CAVhDI,E,CAdEb,EAAQO,OAAS,GAIrB,WAEE,IADA,IACSO,EAAI,EAAGA,EAAId,EAAQO,OAAQO,IAAK,CAEvCZ,EADeF,EAAQc,G,EANzBC,E","sources":["src/js/weekly-trends.js"],"sourcesContent":["import { api } from './api';\nimport { upcomingMovieGenreRequest } from './apikey.js';\nimport { getMovie } from './modal-card';\n\nconst list = document.querySelector('.weekly-trends-card-list');\nconst date = new Date();\n// const ratindg = document.querySelector('.rating-active');\nconst screenWidth = window.innerWidth;\n\n// Фетч АРІ\nasync function weeklyTrendsRequest() {\n  try {\n    const response = await api.get(\n      '/trending/all/week?api_key=7f4ba582d55c3d33bf97672c5d45e075'\n    );\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n// Обробка\nasync function initWeeklyTrendsFetch() {\n  try {\n    let genres = {};\n\n    const data = await weeklyTrendsRequest();\n    const genresData = await upcomingMovieGenreRequest();\n\n    genresData.forEach(genre => {\n      genres[genre.id] = genre.name;\n    });\n\n    if (screenWidth >= 768) {\n      const films = data.results.slice(0, 3);\n      console.log(films);\n      list.insertAdjacentHTML(\n        'beforeend',\n        createWeeklyTrendsMarkup(films, genres)\n      );\n    } else {\n      const films = data.results.slice(0, 1);\n      console.log(films);\n      list.insertAdjacentHTML(\n        'beforeend',\n        createWeeklyTrendsMarkup(films, genres)\n      );\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\ninitWeeklyTrendsFetch();\n\n// Розмітка\nfunction createWeeklyTrendsMarkup(arr, genres) {\n  return arr\n    .map(\n      ({\n        id,\n        title,\n        poster_path,\n        release_date,\n        vote_average,\n        genre_ids,\n      }) => `<li class=\"card-film\"><div class=\"card-container\">\n<img src = \"https://image.tmdb.org/t/p/w500${poster_path}\" alt = \"${title}\" class=\"weekly-trends-film-img\">\n<div class=\"wt-gradient\"></div>\n<div class=\"film-info-poster\">\n<h3 class=\"weekly-trends-film-title\">${title}</h3><div class=\"weekly-trends-info\">\n<span class=\"genre\">${genre_ids\n        .slice(0, 2)\n        .map(genreId => genres[genreId])\n        .join(', ')}</span>\n<span>|</span>\n<span>${date.getFullYear(release_date)}</span></div></div>\n<div class=\"rating weekly-trends-film-rating\"><div class=\"rating-body\">\n<div class=\"rating-active\" style=\"width: ${convertRatingToPercentage(\n        vote_average\n      )}%;\"></div>\n<div class=\"rating-items\">\n<input type=\"radio\" class=\"reting-item\" value=\"1\" name=\"rating\">\n<input type=\"radio\" class=\"reting-item\" value=\"2\" name=\"rating\">\n<input type=\"radio\" class=\"reting-item\" value=\"3\" name=\"rating\">\n<input type=\"radio\" class=\"reting-item\" value=\"4\" name=\"rating\">\n<input type=\"radio\" class=\"reting-item\" value=\"5\" name=\"rating\">\n</div>\n</div>\n</div>\n</div>\n</li>`\n    )\n    .join('');\n}\n\n//   Зірочки\nconst ratings = document.querySelectorAll('.rating');\nif (ratings.length > 0) {\n  initRatings();\n}\n\nfunction initRatings() {\n  let ratingActive, ratingValue;\n  for (let i = 0; i < ratings.length; i++) {\n    const rating = ratings[i];\n    initRating(rating);\n  }\n}\n\nfunction initRating(rating) {\n  initRatingVars(rating);\n  setRetingActiveWidth();\n}\n\nfunction initRatingVars(rating) {\n  ratingActive = rating.querySelector('.rating-active');\n  ratingValue = rating.querySelector('.rating-value');\n}\n\nfunction setRetingActiveWidth(index = ratingValue.innerHTML) {\n  const ratingActiveWidth = parseFloat(ratingValue.innerHTML) / 0.05;\n  ratingActive.style.width = `${ratingActiveWidth}%`;\n}\n\nfunction convertRatingToPercentage(rating) {\n  // Перетворюємо рейтинг у відсотки\n  const percentage = (rating / 10) * 100;\n\n  // Округлюємо значення до двох знаків після коми\n  const roundedPercentage = Math.round(percentage * 100) / 100;\n\n  return roundedPercentage;\n}\n\n// Прослуховувач на картку\n// list.addEventListener('click', onClick);\n\n// function onClick(event) {\n//   const clickCard = event.target;\n\n//   if (event.target.nodeName !== 'DIV') {\n//     return;\n//   } console.dir(clickCard);//\n// }\n"],"names":["$bpxeT","parcelRequire","$fe3a3a1ac89f0559$var$list","document","querySelector","$fe3a3a1ac89f0559$var$date","Date","$fe3a3a1ac89f0559$var$screenWidth","window","innerWidth","$fe3a3a1ac89f0559$var$weeklyTrendsRequest","$fe3a3a1ac89f0559$var$_weeklyTrendsRequest","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","$b7ONl","api","get","_ctx","sent","data","console","log","t0","$fe3a3a1ac89f0559$var$_initWeeklyTrendsFetch","genres","films","films1","$hDMWd","upcomingMovieGenreRequest","forEach","genre","id","name","results","slice","insertAdjacentHTML","$fe3a3a1ac89f0559$var$createWeeklyTrendsMarkup","arr","map","param","percentage","title","poster_path","release_date","vote_average","genre_ids","concat","genreId","join","getFullYear","Math","round","$fe3a3a1ac89f0559$var$initWeeklyTrendsFetch","$fe3a3a1ac89f0559$var$ratings","querySelectorAll","$fe3a3a1ac89f0559$var$initRating","rating","ratingActive","ratingValue","$fe3a3a1ac89f0559$var$initRatingVars","length","innerHTML","ratingActiveWidth","parseFloat","style","width","$fe3a3a1ac89f0559$var$setRetingActiveWidth","i","$fe3a3a1ac89f0559$var$initRatings"],"version":3,"file":"index.394a922b.js.map"}