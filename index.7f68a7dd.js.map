{"mappings":"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","sources":["src/js/weekly-trends.js"],"sourcesContent":["import axios from 'axios';\nconst date = new Date();\nlet genreNames = [];\nlet genreNames2 = [];\nlet genreNames3 = [];\nlet hewgGenreNames = '';\nlet hewgGenreNames2 = '';\nlet hewgGenreNames3 = '';\nconst screenWidth = window.innerWidth;\n\nasync function serviseFilm() {\n  try {\n    const URL =\n      'https://api.themoviedb.org/3/trending/movie/week?language=en-US';\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlOGFlZjVlODMzOTZmYmViNmY2MmU4NmNmZmViYjk4MSIsInN1YiI6IjY0ODIzMjcxZDJiMjA5MDBlYmJmM2Y5OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VO3Y1F5-wzOGPgGegX0KKGPSKeCvq8s50R1CV3r3ln0',\n      },\n    };\n    const response = await axios.get(`${URL}`, options);\n    if (response.status !== 200) {\n      throw new Error(response.status);\n    }\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst list = document.querySelector('.weekly-trends-card-list');\nconst ratindg = document.querySelector('.rating-active');\n\nserviseFilm().then(data => {\n  // console.log(data.results);\n  const film = data.results[8];\n  const { id, title, poster_path, release_date, vote_average, genre_ids } =\n    film;\n\n  const ratingInPercent = convertRatingToPercentage(vote_average);\n  console.log(ratingInPercent);\n\n  serviseGenre()\n    .then(genresData => {\n      const genre = document.querySelector('.genre');\n\n      for (const genreData of genresData) {\n        if (genre_ids.includes(genreData.id)) {\n          genreNames.push(genreData.name);\n        }\n      }\n      hewgGenreNames = genreNames.join(', ');\n      genre.textContent = `${hewgGenreNames}`;\n    })\n    .catch(err => console.log(err));\n\n  const markup = `<li class=\"card-film\"><div class=\"card-container\">\n  <img src = \"https://image.tmdb.org/t/p/w500${poster_path}\" alt = \"${title}\" class=\"weekly-trends-film-img\">\n  <div class=\"film-info-poster\">\n  <h3 class=\"weekly-trends-film-title\">${title}</h3><div class=\"weekly-trends-info\">\n  <span class=\"genre\">${hewgGenreNames}</span>\n  <span>|</span>\n  <span>${date.getFullYear(release_date)}</span></div></div>\n  <div class=\"rating weekly-trends-film-rating\"><div class=\"rating-body\">\n  <div class=\"rating-active\" style=\"width: ${ratingInPercent}%;\"></div>\n  <div class=\"rating-items\">\n        <input type=\"radio\" class=\"reting-item\" value=\"1\" name=\"rating\">\n        <input type=\"radio\" class=\"reting-item\" value=\"2\" name=\"rating\">\n        <input type=\"radio\" class=\"reting-item\" value=\"3\" name=\"rating\">\n        <input type=\"radio\" class=\"reting-item\" value=\"4\" name=\"rating\">\n        <input type=\"radio\" class=\"reting-item\" value=\"5\" name=\"rating\">\n    </div>\n</div>\n</div>\n</div>\n</li>`;\n  list.insertAdjacentHTML('beforeend', markup);\n\n  if (screenWidth >= 768) {\n    const film2 = data.results[12];\n    const id2 = film2.id;\n    const title2 = film2.title;\n    const poster_path2 = film2.poster_path;\n    const release_date2 = film2.release_date;\n    const vote_average2 = film2.vote_average;\n    const genre_ids2 = film2.genre_ids;\n\n    const ratingInPercent2 = convertRatingToPercentage(vote_average2);\n\n    console.log(ratingInPercent2);\n\n    serviseGenre()\n      .then(genresData => {\n        const genre2 = document.querySelector('.genre2');\n\n        for (const genreData of genresData) {\n          if (genre_ids2.includes(genreData.id)) {\n            genreNames2.push(genreData.name);\n          }\n        }\n        hewgGenreNames2 = genreNames2.join(', ');\n        genre2.textContent = `${hewgGenreNames2}`;\n      })\n      .catch(err => console.log(err));\n\n    const markup2 = `<li class=\"card-film\"><div class=\"card-container\">\n      <img src = \"https://image.tmdb.org/t/p/w500${poster_path2}\" alt = \"${title2}\" class=\"weekly-trends-film-img\">\n      <div class=\"film-info-poster\">\n      <h3 class=\"weekly-trends-film-title\">${title2}</h3><div class=\"weekly-trends-info\">\n      <span class=\"genre2\">${hewgGenreNames2}</span>\n      <span>|</span>\n      <span>${date.getFullYear(release_date2)}</span></div></div>\n      <div class=\"rating weekly-trends-film-rating\"><div class=\"rating-body\">\n      <div class=\"rating-active\" style=\"width: ${ratingInPercent2}%;\"></div>\n      <div class=\"rating-items\">\n            <input type=\"radio\" class=\"reting-item\" value=\"1\" name=\"rating\"></>\n            <input type=\"radio\" class=\"reting-item\" value=\"2\" name=\"rating\"></>\n            <input type=\"radio\" class=\"reting-item\" value=\"3\" name=\"rating\"></>\n            <input type=\"radio\" class=\"reting-item\" value=\"4\" name=\"rating\"></>\n            <input type=\"radio\" class=\"reting-item\" value=\"5\" name=\"rating\"></>\n        </div>\n    </div>\n    </div>\n    </div>\n    </li>`;\n    list.insertAdjacentHTML('beforeend', markup2);\n    // list.insertAdjacentHTML('beforeend', markup);\n    // list.innerHTML = markup2;\n\n    const film3 = data.results[2];\n\n    const id3 = film3.id;\n    const title3 = film3.title;\n    const poster_path3 = film3.poster_path;\n    const release_date3 = film3.release_date;\n    const vote_average3 = film3.vote_average;\n    const genre_ids3 = film3.genre_ids;\n\n    const ratingInPercent3 = convertRatingToPercentage(vote_average3);\n    console.log(ratingInPercent3);\n\n    serviseGenre()\n      .then(genresData => {\n        const genre3 = document.querySelector('.genre3');\n\n        for (const genreData of genresData) {\n          if (genre_ids3.includes(genreData.id)) {\n            genreNames3.push(genreData.name);\n          }\n        }\n        hewgGenreNames3 = genreNames3.join(', ');\n        genre3.textContent = `${hewgGenreNames3}`;\n      })\n      .catch(err => console.log(err));\n\n    const markup3 = `<li class=\"card-film\"><div class=\"card-container\">\n      <img src = \"https://image.tmdb.org/t/p/w500${poster_path3}\" alt = \"${title3}\" class=\"weekly-trends-film-img\">\n      <div class=\"film-info-poster\">\n      <h3 class=\"weekly-trends-film-title\">${title3}</h3><div class=\"weekly-trends-info\">\n      <span class=\"genre3\">${hewgGenreNames3}</span>\n      <span>|</span>\n      <span>${date.getFullYear(release_date3)}</span></div></div>\n      <div class=\"rating weekly-trends-film-rating\"><div class=\"rating-body\">\n      <div class=\"rating-active\" style=\"width: ${ratingInPercent3}%;\"></div>\n      <div class=\"rating-items\">\n            <input type=\"radio\" class=\"reting-item\" value=\"1\" name=\"rating\"></>\n            <input type=\"radio\" class=\"reting-item\" value=\"2\" name=\"rating\"></>\n            <input type=\"radio\" class=\"reting-item\" value=\"3\" name=\"rating\"></>\n            <input type=\"radio\" class=\"reting-item\" value=\"4\" name=\"rating\"></>\n            <input type=\"radio\" class=\"reting-item\" value=\"5\" name=\"rating\"></>\n        </div>\n    </div>\n    </div>\n    </div>\n    </li>`;\n    list.insertAdjacentHTML('beforeend', markup3);\n  }\n});\n\n//   Зірочки\nconst ratings = document.querySelectorAll('.rating');\nif (ratings.length > 0) {\n  initRatings();\n}\n\nfunction initRatings() {\n  let ratingActive, ratingValue;\n  for (let i = 0; i < ratings.length; i++) {\n    const rating = ratings[i];\n    initRating(rating);\n  }\n}\n\nfunction initRating(rating) {\n  initRatingVars(rating);\n  setRetingActiveWidth();\n}\n\nfunction initRatingVars(rating) {\n  ratingActive = rating.querySelector('.rating-active');\n  ratingValue = rating.querySelector('.rating-value');\n}\n\nfunction setRetingActiveWidth(index = ratingValue.innerHTML) {\n  const ratingActiveWidth = parseFloat(ratingValue.innerHTML) / 0.05;\n  ratingActive.style.width = `${ratingActiveWidth}%`;\n}\n\nfunction convertRatingToPercentage(rating) {\n  // Перетворюємо рейтинг у відсотки\n  const percentage = (rating / 10) * 100;\n\n  // Округлюємо значення до двох знаків після коми\n  const roundedPercentage = Math.round(percentage * 100) / 100;\n\n  return roundedPercentage;\n}\n\n// Жанри\nasync function serviseGenre() {\n  try {\n    const URL = 'https://api.themoviedb.org/3/genre/movie/list?language=en';\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlOGFlZjVlODMzOTZmYmViNmY2MmU4NmNmZmViYjk4MSIsInN1YiI6IjY0ODIzMjcxZDJiMjA5MDBlYmJmM2Y5OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VO3Y1F5-wzOGPgGegX0KKGPSKeCvq8s50R1CV3r3ln0',\n      },\n    };\n    const response = await axios.get(`${URL}`, options);\n    const genresData = response.data.genres;\n    return genresData;\n  } catch (err) {\n    console.log(err);\n  }\n}\n"],"names":["$2shzp","parcelRequire","$d395fb91404b7f70$var$date","Date","$d395fb91404b7f70$var$genreNames","$d395fb91404b7f70$var$genreNames2","$d395fb91404b7f70$var$genreNames3","$d395fb91404b7f70$var$hewgGenreNames","$d395fb91404b7f70$var$hewgGenreNames2","$d395fb91404b7f70$var$hewgGenreNames3","$d395fb91404b7f70$var$screenWidth","window","innerWidth","$d395fb91404b7f70$var$list","document","querySelector","async","URL","options","method","headers","accept","Authorization","response","default","get","status","Error","data","error","console","log","$d395fb91404b7f70$var$serviseFilm","then","film","results","id","title","poster_path","release_date","vote_average","genre_ids","ratingInPercent","$d395fb91404b7f70$var$convertRatingToPercentage","$d395fb91404b7f70$var$serviseGenre","genresData","genre","genreData","includes","push","name","join","textContent","catch","err","markup","getFullYear","insertAdjacentHTML","film2","title2","poster_path2","release_date2","vote_average2","genre_ids2","ratingInPercent2","genre2","markup2","film3","title3","poster_path3","release_date3","vote_average3","genre_ids3","ratingInPercent3","genre3","markup3","$d395fb91404b7f70$var$ratings","querySelectorAll","$d395fb91404b7f70$var$initRating","rating","ratingActive","ratingValue","$d395fb91404b7f70$var$initRatingVars","index","innerHTML","ratingActiveWidth","parseFloat","style","width","$d395fb91404b7f70$var$setRetingActiveWidth","percentage","Math","round","genres","length","i","$d395fb91404b7f70$var$initRatings"],"version":3,"file":"index.7f68a7dd.js.map"}