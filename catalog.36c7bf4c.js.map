{"mappings":"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","sources":["src/js/search.js","src/js/catalog.js"],"sourcesContent":["import { searchRequest } from './apikey';\nimport { upcomingMovieGenreRequest } from './apikey';\nimport Notiflix from 'notiflix';\nimport { renderCatalog } from './catalog';\nimport { dayTrend } from './catalog';\nimport { paginationContainer } from './catalog';\nimport { formatPageNumber } from './catalog';\nimport { addEllipsis } from './catalog';\n\nlet genres;\nlet currentPage = 1;\nlet movieRequest;\n\nconst searchForm = document.querySelector('.catalog-form');\nconst filmSearchList = document.querySelector('.js-catalog-search');\nconst yearSelect = document.querySelector('#js-search-select');\n\nconsole.log(searchForm);\nconsole.log(filmSearchList);\n\nfunction createSelect() {\n  const currentYear = new Date().getFullYear();\n\n  for (let i = 1940; i <= currentYear; i++) {\n    const option = document.createElement('option');\n    option.classList.add('selectOption');\n    option.value = i;\n    option.text = i;\n    yearSelect.appendChild(option);\n  }\n}\n\ncreateSelect();\n\nsearchForm.addEventListener('submit', handleSearch);\n\nasync function handleSearch(evt) {\n  try {\n    evt.preventDefault();\n\n    genres = {};\n\n    formEvt = evt.currentTarget.elements.catalogSearchQuery.value;\n    formYear = evt.currentTarget.elements.select.value;\n\n    const movieRequest = await searchRequest(formEvt, formYear, currentPage);\n    const genresData = await upcomingMovieGenreRequest();\n\n    genresData.forEach(genre => {\n      genres[genre.id] = genre.name;\n    });\n\n    if (formEvt.length > 1) {\n      dayTrend.innerHTML = '';\n      renderCatalog(movieRequest.results, genres);\n      console.log(movieRequest.results);\n    }\n\n    const movieTotalPages = movieRequest.total_pages;\n    setupPagination(movieTotalPages);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction setupPagination(movieTotalPages) {\n  let totalPages = movieTotalPages;\n\n  paginationContainer.innerHTML = '';\n\n  const maxVisiblePages = 5; // Максимальное количество видимых страниц, включая символ \"...\"\n  const halfVisiblePages = Math.floor(maxVisiblePages / 2);\n\n  let startPage = Math.max(currentPage - halfVisiblePages, 1);\n  let endPage = Math.min(startPage + maxVisiblePages - 1, totalPages);\n\n  if (endPage - startPage + 1 < maxVisiblePages) {\n    startPage = Math.max(endPage - maxVisiblePages + 1, 1);\n  }\n\n  if (currentPage > 1) {\n    addPrevPageLink(); // Добавляем стрелку \"<\" для перехода на предыдущую страницу\n  }\n\n  if (startPage > 1) {\n    addPageLink(1); // Добавляем ссылку на первую страницу\n    if (startPage > 2) {\n      addEllipsis(); // Добавляем символ \"...\" для скрытых страниц\n    }\n  }\n\n  for (let i = startPage; i <= endPage; i++) {\n    addPageLink(i); // Добавляем ссылки на видимые страницы\n  }\n\n  if (endPage < totalPages) {\n    if (endPage < totalPages - 1) {\n      addEllipsis(); // Добавляем символ \"...\" для скрытых страниц\n    }\n    addPageLink(totalPages); // Добавляем ссылку на последнюю страницу\n  }\n\n  if (currentPage < totalPages) {\n    addNextPageLink(); // Добавляем стрелку \">\" для перехода на следующую страницу\n  }\n}\n\nfunction addPageLink(pageNumber) {\n  const pageDiv = document.createElement('div');\n  pageDiv.classList.add('page-number');\n  const pageLink = document.createElement('a');\n  pageLink.classList = 'catalog-pagination-link';\n  pageLink.href = '#';\n  pageLink.textContent = formatPageNumber(pageNumber);\n\n  if (pageNumber === currentPage) {\n    pageLink.classList.add('active');\n    pageDiv.classList.add('active');\n  }\n\n  pageLink.addEventListener('click', async function () {\n    currentPage = pageNumber;\n    console.log(currentPage);\n    movieRequest = await searchRequest(formEvt, formYear, currentPage);\n    renderCatalog(movieRequest.results, genres);\n    setupPagination(movieRequest.total_pages);\n  });\n\n  pageDiv.appendChild(pageLink);\n  paginationContainer.appendChild(pageDiv);\n}\n\nfunction addPrevPageLink() {\n  const prevPageLink = document.createElement('a');\n  prevPageLink.href = '#';\n  prevPageLink.textContent = '<';\n  prevPageLink.addEventListener('click', async function () {\n    currentPage -= 1;\n    console.log(currentPage);\n    const movieRequest = await searchRequest(formEvt, formYear, currentPage);\n    renderCatalog(movieRequest.results, genres);\n    setupPagination(movieRequest.total_pages);\n  });\n  paginationContainer.appendChild(prevPageLink);\n}\n\nfunction addNextPageLink() {\n  const nextPageLink = document.createElement('a');\n  nextPageLink.href = '#';\n  nextPageLink.textContent = '>';\n  nextPageLink.addEventListener('click', async function () {\n    currentPage += 1;\n    console.log(currentPage);\n    const movieRequest = await searchRequest(formEvt, formYear, currentPage);\n    renderCatalog(movieRequest.results, genres);\n    setupPagination(movieRequest.total_pages);\n  });\n  paginationContainer.appendChild(nextPageLink);\n}\n","import { trendMovieRequest } from './apikey.js';\nimport { upcomingMovieGenreRequest } from './apikey.js';\n\nexport const dayTrend = document.querySelector('.catalog-js');\nexport const paginationContainer = document.querySelector(\n  '.pagination-container'\n);\nlet currentPage = 1;\nlet trendData;\nlet genres;\n\n///////////\n\n///////////\n\nexport async function initCatalogFetch() {\n  try {\n    genres = {};\n    trendData = await trendMovieRequest(currentPage);\n    const genresData = await upcomingMovieGenreRequest();\n\n    genresData.forEach(genre => {\n      genres[genre.id] = genre.name;\n    });\n\n    renderCatalog(trendData.results, genres);\n\n    setupPagination();\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction setupPagination() {\n  let totalPages = trendData.total_pages;\n  paginationContainer.innerHTML = '';\n\n  const maxVisiblePages = 5; // Максимальное количество видимых страниц, включая символ \"...\"\n  const halfVisiblePages = Math.floor(maxVisiblePages / 2);\n\n  let startPage = Math.max(currentPage - halfVisiblePages, 1);\n  let endPage = Math.min(startPage + maxVisiblePages - 1, totalPages);\n\n  if (endPage - startPage + 1 < maxVisiblePages) {\n    startPage = Math.max(endPage - maxVisiblePages + 1, 1);\n  }\n\n  if (currentPage > 1) {\n    addPrevPageLink(); // Добавляем стрелку \"<\" для перехода на предыдущую страницу\n  }\n\n  if (startPage > 1) {\n    addPageLink(1); // Добавляем ссылку на первую страницу\n    if (startPage > 2) {\n      addEllipsis(); // Добавляем символ \"...\" для скрытых страниц\n    }\n  }\n\n  for (let i = startPage; i <= endPage; i++) {\n    addPageLink(i); // Добавляем ссылки на видимые страницы\n  }\n\n  if (endPage < totalPages) {\n    if (endPage < totalPages - 1) {\n      addEllipsis(); // Добавляем символ \"...\" для скрытых страниц\n    }\n    addPageLink(totalPages); // Добавляем ссылку на последнюю страницу\n  }\n\n  if (currentPage < totalPages) {\n    addNextPageLink(); // Добавляем стрелку \">\" для перехода на следующую страницу\n  }\n}\n\nfunction addPageLink(pageNumber) {\n  const pageDiv = document.createElement('div');\n  pageDiv.classList.add('page-number');\n  const pageLink = document.createElement('a');\n  pageLink.classList = 'catalog-pagination-link';\n  pageLink.href = '#';\n  pageLink.textContent = formatPageNumber(pageNumber);\n\n  if (pageNumber === currentPage) {\n    pageLink.classList.add('active');\n    pageDiv.classList.add('active');\n  }\n\n  pageLink.addEventListener('click', async function () {\n    currentPage = pageNumber;\n    console.log(currentPage);\n    trendData = await trendMovieRequest(currentPage);\n    renderCatalog(trendData.results, genres);\n    setupPagination(trendData.total_pages);\n  });\n\n  pageDiv.appendChild(pageLink);\n  paginationContainer.appendChild(pageDiv);\n}\n\nexport function formatPageNumber(pageNumber) {\n  // Добавляем ведущий ноль, если номер страницы меньше 10\n  return pageNumber < 10 ? `0${pageNumber}` : pageNumber.toString();\n}\n\nexport function addEllipsis() {\n  const ellipsisSpan = document.createElement('span');\n  ellipsisSpan.textContent = '...';\n  paginationContainer.appendChild(ellipsisSpan);\n}\n\nfunction addPrevPageLink() {\n  const prevPageLink = document.createElement('a');\n  prevPageLink.href = '#';\n  prevPageLink.textContent = '<';\n  prevPageLink.addEventListener('click', async function () {\n    currentPage -= 1;\n    console.log(currentPage);\n    trendData = await trendMovieRequest(currentPage);\n    renderCatalog(trendData.results, genres);\n    setupPagination(trendData.total_pages);\n  });\n  paginationContainer.appendChild(prevPageLink);\n}\n\nfunction addNextPageLink() {\n  const nextPageLink = document.createElement('a');\n  nextPageLink.href = '#';\n  nextPageLink.textContent = '>';\n  nextPageLink.addEventListener('click', async function () {\n    currentPage += 1;\n    console.log(currentPage);\n    trendData = await trendMovieRequest(currentPage);\n    renderCatalog(trendData.results, genres);\n    setupPagination(trendData.total_pages);\n  });\n  paginationContainer.appendChild(nextPageLink);\n}\n\nexport function renderCatalog(arr, genres) {\n  dayTrend.innerHTML = ''; // Clear the container\n\n  const htmlMarkup = catalogTrendMarkup(arr, genres);\n  dayTrend.insertAdjacentHTML('beforeend', htmlMarkup);\n}\n\nexport function catalogTrendMarkup(arr, genres) {\n  return arr\n    .map(movie => {\n      const {\n        release_date,\n        backdrop_path,\n        genre_ids,\n        title,\n        vote_average,\n        name,\n        poster_path,\n      } = movie;\n\n      const genreSlice = genre_ids;\n\n      const genreNames = genreSlice\n        .map(genreId => {\n          return genres[genreId];\n        })\n        .join(', ');\n\n      //с бэкэнда на некоторые фильмы приходит не title, а name\n      let filmName;\n      if (!title) {\n        filmName = name;\n      } else {\n        filmName = title;\n      }\n\n      let release = release_date.slice(0, 4);\n      if (!release || release === '') {\n        release = 'unknown';\n      }\n\n      let poster;\n      if (!backdrop_path && !poster_path) {\n        poster = '/vL5LR6WdxWPjLPFRLe133jXWsh5.jpg';\n      } else if (!backdrop_path) {\n        poster = poster_path;\n      } else {\n        poster = backdrop_path;\n      }\n\n      return `<div class=\"library-container-item\">\n                <div class=\"library-container-img\" style=\"background-image: url(https://image.tmdb.org/t/p/original${poster});\">\n                <div class=\"rating-libr rating-library\">\n                        <div class=\"rating-body\">\n                            <div class=\"rating-active\" style=\"width: ${convertRatingToPercentage(\n                              vote_average\n                            )}%;\"></div>\n                            <div class=\"rating-items\">\n                                <input type=\"radio\" class=\"reting-item\" value=\"1\" name=\"rating\"></>\n                                <input type=\"radio\" class=\"reting-item\" value=\"2\" name=\"rating\"></>\n                                <input type=\"radio\" class=\"reting-item\" value=\"3\" name=\"rating\"></>\n                                <input type=\"radio\" class=\"reting-item\" value=\"4\" name=\"rating\"></>\n                                <input type=\"radio\" class=\"reting-item\" value=\"5\" name=\"rating\"></>\n                            </div>\n                            </div>\n                        </div>\n                    <div class=\"library-container-about\">\n                        <h3 class=\"library-movie-title\">${filmName}</h3>     \n                        <span class=\"library-genre-title\">${genreNames}</span><span class=\"library-genre-title\"> | ${release}</span>   \n                    </div> \n            </div>\n            </div>\n        </div>`;\n    })\n    .join('');\n}\n\ninitCatalogFetch();\n\nexport function convertRatingToPercentage(rating) {\n  // Перетворюємо рейтинг у відсотки\n  const percentage = (rating / 10) * 100;\n\n  // Округлюємо значення до двох знаків після коми\n  const roundedPercentage = Math.round(percentage * 100) / 100;\n\n  return roundedPercentage;\n}\n"],"names":["$bpxeT","parcelRequire","$01039996e00cb7ba$var$trendData","$01039996e00cb7ba$var$genres","$d35904b1c7f1c41e$var$genres","$01039996e00cb7ba$export$65b190bf57aeec48","document","querySelector","$01039996e00cb7ba$export$5dd819bdfbc7b15d","$01039996e00cb7ba$var$currentPage","$01039996e00cb7ba$var$_initCatalogFetch","$parcel$interopDefault","$2TvXO","mark","_callee","$hDMWd","trendMovieRequest","_ctx","sent","upcomingMovieGenreRequest","forEach","genre","id","name","$01039996e00cb7ba$export$6d2cdb15d4f6744","results","$01039996e00cb7ba$var$setupPagination","console","log","t0","apply","this","arguments","totalPages","total_pages","innerHTML","prevPageLink","nextPageLink","halfVisiblePages","Math","floor","maxVisiblePages","startPage","max","endPage","min","createElement","href","textContent","addEventListener","appendChild","$01039996e00cb7ba$var$addPageLink","$01039996e00cb7ba$export$92eb9173bebbaa4a","i","pageNumber","pageDiv","classList","add","pageLink","$01039996e00cb7ba$export$6fdc1d5fc92215b9","concat","toString","ellipsisSpan","arr","genres1","htmlMarkup","genres2","map","movie","filmName","release_date","backdrop_path","genre_ids","title","vote_average","poster_path","genreNames","genreId","join","rating","percentage","release","slice","round","$01039996e00cb7ba$export$8a70c9415fcb563f","insertAdjacentHTML","$01039996e00cb7ba$export$ac223bdbc578cc64","$d35904b1c7f1c41e$var$movieRequest","$d35904b1c7f1c41e$var$currentPage","$d35904b1c7f1c41e$var$searchForm","$d35904b1c7f1c41e$var$filmSearchList","$d35904b1c7f1c41e$var$yearSelect","$d35904b1c7f1c41e$var$_handleSearch","evt","movieRequest1","preventDefault","formEvt","currentTarget","elements","catalogSearchQuery","value","formYear","select","searchRequest","length","$d35904b1c7f1c41e$var$setupPagination","movieTotalPages","movieRequest2","$d35904b1c7f1c41e$var$addPageLink","movieRequest3","currentYear","Date","getFullYear","option","text","$d35904b1c7f1c41e$var$createSelect"],"version":3,"file":"catalog.36c7bf4c.js.map"}