{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,0BAGMC,G,aAAcC,SAASC,cAAc,mB,SAE5BC,I,OAAAA,EAAfC,EAAAN,EAAA,CAAAM,EAAAC,GAAAC,MAAA,SAAAC,I,IAEQC,EAEEC,EAOAC,EACAC,E,kFAVFH,EAAS,G,UAEM,EAAAI,EAAAC,wB,cAAbJ,EAAIK,EAAAC,K,UACe,EAAAH,EAAAI,6B,OAATF,EAAAC,KAELE,SAAQ,SAAAC,GACjBV,EAAOU,EAAMC,IAAMD,EAAME,I,IAGrBV,EAAaW,KAAKC,MAAMD,KAAKE,SAAWd,EAAKe,QAAQC,QACrDd,EAAgBF,EAAKe,QAAQd,GAEnCV,EAAY0B,mBACV,YACAC,EAAqBhB,EAAeH,IAGtCoB,EAAYjB,EAAcQ,I,kDAE1BU,QAAQC,IAAGhB,EAAAiB,I,2DArBiBC,MAAAC,KAAAC,U,CA2BhC,SAASP,EAAqBQ,EAAK3B,GACjC,IACE4B,EAQED,EARFC,aACAC,EAOEF,EAPFE,aACAC,EAMEH,EANFG,WACAC,EAKEJ,EALFI,cACAC,EAIEL,EAJFK,UACAC,EAGEN,EAHFM,SACAC,EAEEP,EAFFO,MACAC,EACER,EADFQ,WAEIC,EAAaJ,EAAUK,MAAM,EAAG,GAAGC,KAAI,SAAAC,G,OAAWvC,EAAOuC,E,IAE/D,MAAO,0FACqEC,OAAvBT,EAAc,WAEzBS,OAFkCN,EAAM,uHAM5BM,OAJZN,EAAM,4OAQsBM,OAJhBZ,EAAa,0OAIyFY,OAAtFX,EAAa,2EAIvBW,OAJgGV,EAAW,qOAQxHU,OAJaL,EAAWM,QAAQ,GAAG,4MAQrCD,OAJEJ,EAAW,uKAIJI,OAATP,EAAS,sI,CAMxD,SAASb,EAAYT,GACnB,IAAM+B,EAAcjD,SAASC,cAAc,cAE3CgD,EAAYC,iBAAiB,SAAS,WAEhCD,EAAYE,UAAUC,SAAS,aACjCH,EAAYE,UAAUE,OAAO,YAC7BJ,EAAYK,YAAc,yBAE1BC,aAAaC,QAAQ,UAAWtC,GAChCU,QAAQC,IAAI,kCAAmCX,KAE/C+B,EAAYE,UAAUM,IAAI,YAC1BF,aAAaG,WAAW,UAAWxC,GACnC+B,EAAYK,YAAc,oBAC1B1B,QAAQC,IAAI,oCAAqCX,G,gBApFxChB,EAAiB6B,MAAAC,KAAAC,U,CAyBhC0B,E","sources":["src/js/month-trend.js"],"sourcesContent":["import { upcomingMovieGenreRequest } from './apikey.js';\nimport { upcomingMovieRequest } from './apikey.js';\n\nconst upcomingBox = document.querySelector('.upcom-js-list');\n\nasync function initUpcomingFetch() {\n  try {\n    let genres = {};\n\n    const data = await upcomingMovieRequest();\n    const genresData = await upcomingMovieGenreRequest();\n\n    genresData.forEach(genre => {\n      genres[genre.id] = genre.name;\n    });\n\n    const randomData = Math.floor(Math.random() * data.results.length); \n    const randomDataRes = data.results[randomData];\n\n    upcomingBox.insertAdjacentHTML(\n      'beforeend',\n      createUpcomingMarkup(randomDataRes, genres)\n    );\n\n    changeClick(randomDataRes.id);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\ninitUpcomingFetch();\n\nfunction createUpcomingMarkup(arr, genres) {\n  const {\n    release_date,\n    vote_average,\n    vote_count,\n    backdrop_path,\n    genre_ids,\n    overview,\n    title,\n    popularity,\n  } = arr;\n  const genreNames = genre_ids.slice(0, 2).map(genreId => genres[genreId]);\n\n  return `<div class=\"upcoming-container\">\n        <img src=\"https://image.tmdb.org/t/p/original${backdrop_path}\" alt=\"${title}\" class=\"upcom-img\" /> \n        <div class=\"upcoming-container-about\">\n            <h3 class=\"upcom-movie-title\">${title}</h3>\n                <ul class=\"upcoming-list\">\n                    <li class=\"upcoming-list-item\">\n                        <p class=\"upcom-movie-subtitle\">Release date</p>\n                        <p class=\"upcom-release-date\">${release_date}</p>\n                    </li>\n                    <li class=\"upcoming-list-item\">\n                        <p class=\"upcom-movie-subtitle\">Vote / Votes</p>\n                        <p class=\"upcom-vote\"><span class=\"vote-span\">${vote_average}</span> <span class=\"slash\">&nbsp/&nbsp</span> <span class=\"vote-span\">${vote_count}</span></p>\n                    </li>\n                    <li class=\"upcoming-list-item\">\n                        <p class=\"upcom-movie-subtitle\">Popularity</p>\n                        <p class=\"upcom-popularity popular\">${popularity.toFixed(1)}</p>\n                    </li>\n                    <li class=\"upcoming-list-item\">\n                        <p class=\"upcom-movie-subtitle\">Genre</p>\n                        <p class=\"upcom-genre\">${genreNames}</p>\n                    </li>\n                </ul>\n                <p class=\"upcom-movie-about-title\">ABOUT</p>\n                <p class=\"upcom-movie-about\">${overview}</p>\n                <button type=\"button\" class=\"upcom-btn isActive\">Add to my library</button>\n            </div>\n      </div>`;\n}\n\nfunction changeClick(id) {\n  const upcomingBtn = document.querySelector('.upcom-btn');\n\n  upcomingBtn.addEventListener('click', () => {\n    \n    if (upcomingBtn.classList.contains('isActive')) {\n      upcomingBtn.classList.remove('isActive');\n      upcomingBtn.textContent = \"Remove from my library\";\n      \n      localStorage.setItem('movieId', id);\n      console.log('Movie ID added to localStorage:', id);\n    } else {\n      upcomingBtn.classList.add('isActive');\n      localStorage.removeItem('movieId', id);\n      upcomingBtn.textContent = \"Add to my library\";\n      console.log('Movie ID removed to localStorage:', id);\n    }\n  });\n}"],"names":["$bpxeT","parcelRequire","$7164b7090fd99405$var$upcomingBox","document","querySelector","$7164b7090fd99405$var$_initUpcomingFetch","$parcel$interopDefault","$2TvXO","mark","_callee","genres","data","randomData","randomDataRes","$hDMWd","upcomingMovieRequest","_ctx","sent","upcomingMovieGenreRequest","forEach","genre","id","name","Math","floor","random","results","length","insertAdjacentHTML","$7164b7090fd99405$var$createUpcomingMarkup","$7164b7090fd99405$var$changeClick","console","log","t0","apply","this","arguments","arr","release_date","vote_average","vote_count","backdrop_path","genre_ids","overview","title","popularity","genreNames","slice","map","genreId","concat","toFixed","upcomingBtn","addEventListener","classList","contains","remove","textContent","localStorage","setItem","add","removeItem","$7164b7090fd99405$var$initUpcomingFetch"],"version":3,"file":"index.e664e636.js.map"}