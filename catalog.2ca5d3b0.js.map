{"mappings":"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","sources":["src/js/catalog.js"],"sourcesContent":["import { trendMovieRequest } from './apikey.js';\nimport { upcomingMovieGenreRequest } from './apikey.js';\n\nconst dayTrend = document.querySelector('.catalog-js');\nconst paginationContainer = document.querySelector('.pagination-container');\nconst itemsPerPage = 20;\nlet currentPage = 1;\nlet trendData;\nlet genres;\n\nasync function initCatalogFetch() {\n  try {\n    genres = {};\n    trendData = await trendMovieRequest(currentPage);\n    const genresData = await upcomingMovieGenreRequest();\n\n    genresData.forEach(genre => {\n      genres[genre.id] = genre.name;\n    });\n\n    console.log(trendData.results);\n\n    renderCatalog(trendData.results, genres);\n\n    setupPagination();\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction setupPagination() {\n  const totalPages = 25;\n  paginationContainer.innerHTML = '';\n\n  const maxVisiblePages = 5; // Максимальное количество видимых страниц, включая символ \"...\"\n  const halfVisiblePages = Math.floor(maxVisiblePages / 2);\n\n  let startPage = Math.max(currentPage - halfVisiblePages, 1);\n  let endPage = Math.min(startPage + maxVisiblePages - 1, totalPages);\n\n  if (endPage - startPage + 1 < maxVisiblePages) {\n    startPage = Math.max(endPage - maxVisiblePages + 1, 1);\n  }\n\n  if (currentPage > 1) {\n    addPrevPageLink(); // Добавляем стрелку \"<\" для перехода на предыдущую страницу\n  }\n\n  if (startPage > 1) {\n    addPageLink(1); // Добавляем ссылку на первую страницу\n    if (startPage > 2) {\n      addEllipsis(); // Добавляем символ \"...\" для скрытых страниц\n    }\n  }\n\n  for (let i = startPage; i <= endPage; i++) {\n    addPageLink(i); // Добавляем ссылки на видимые страницы\n  }\n\n  if (endPage < totalPages) {\n    if (endPage < totalPages - 1) {\n      addEllipsis(); // Добавляем символ \"...\" для скрытых страниц\n    }\n    addPageLink(totalPages); // Добавляем ссылку на последнюю страницу\n  }\n\n  if (currentPage < totalPages) {\n    addNextPageLink(); // Добавляем стрелку \">\" для перехода на следующую страницу\n  }\n}\n\nfunction addPageLink(pageNumber) {\n  const pageDiv = document.createElement('div');\n  pageDiv.classList.add('page-number');\n  const pageLink = document.createElement('a');\n  pageLink.classList = 'catalog-pagination-link';\n  pageLink.href = '#';\n  pageLink.textContent = formatPageNumber(pageNumber);\n\n  if (pageNumber === currentPage) {\n    pageLink.classList.add('active');\n    pageDiv.classList.add('active');\n  }\n\n  pageLink.addEventListener('click', async function () {\n    currentPage = pageNumber;\n    console.log(currentPage);\n    trendData = await trendMovieRequest(currentPage);\n    renderCatalog(trendData.results, genres);\n    setupPagination(trendData.total_pages);\n  });\n\n  pageDiv.appendChild(pageLink);\n  paginationContainer.appendChild(pageDiv);\n}\n\nfunction formatPageNumber(pageNumber) {\n  // Добавляем ведущий ноль, если номер страницы меньше 10\n  return pageNumber < 10 ? `0${pageNumber}` : pageNumber.toString();\n}\n\nfunction addEllipsis() {\n  const ellipsisSpan = document.createElement('span');\n  ellipsisSpan.textContent = '...';\n  paginationContainer.appendChild(ellipsisSpan);\n}\n\nfunction addPrevPageLink() {\n  const prevPageLink = document.createElement('a');\n  prevPageLink.href = '#';\n  prevPageLink.textContent = '<';\n  prevPageLink.addEventListener('click', async function () {\n    currentPage -= 1;\n    console.log(currentPage);\n    trendData = await trendMovieRequest(currentPage);\n    renderCatalog(trendData.results, genres);\n    setupPagination(trendData.total_pages);\n  });\n  paginationContainer.appendChild(prevPageLink);\n}\n\nfunction addNextPageLink() {\n  const nextPageLink = document.createElement('a');\n  nextPageLink.href = '#';\n  nextPageLink.textContent = '>';\n  nextPageLink.addEventListener('click', async function () {\n    currentPage += 1;\n    console.log(currentPage);\n    trendData = await trendMovieRequest(currentPage);\n    renderCatalog(trendData.results, genres);\n    setupPagination(trendData.total_pages);\n  });\n  paginationContainer.appendChild(nextPageLink);\n}\n\nfunction renderCatalog(arr, genres) {\n  dayTrend.innerHTML = ''; // Clear the container\n\n  const htmlMarkup = catalogTrendMarkup(arr, genres);\n  dayTrend.insertAdjacentHTML('beforeend', htmlMarkup);\n}\n\nfunction catalogTrendMarkup(arr, genres) {\n  return arr\n    .map(movie => {\n      const {\n        release_date,\n        backdrop_path,\n        genre_ids,\n        title,\n        vote_average,\n        name,\n        first_air_date,\n      } = movie;\n\n      const genreSlice = genre_ids.slice(0, 2);\n\n      const genreNames = genreSlice\n        .map(genreId => {\n          return genres[genreId];\n        })\n        .join(', ');\n\n      //с бэкэнда на некоторые фильмы приходит не title, а name\n      let filmName;\n      if (!title) {\n        filmName = name;\n      } else {\n        filmName = title;\n      }\n\n      let release;\n      if (!release_date) {\n        release = first_air_date;\n      } else {\n        release = release_date;\n      }\n\n      return `<div class=\"library-container-item\">\n                <div class=\"library-container-img\" style=\"background-image: url(https://image.tmdb.org/t/p/original${backdrop_path});\">\n                <div class=\"rating-libr rating-library\">\n                        <div class=\"rating-body\">\n                            <div class=\"rating-active\" style=\"width: ${convertRatingToPercentage(\n                              vote_average\n                            )}%;\"></div>\n                            <div class=\"rating-items\">\n                                <input type=\"radio\" class=\"reting-item\" value=\"1\" name=\"rating\"></>\n                                <input type=\"radio\" class=\"reting-item\" value=\"2\" name=\"rating\"></>\n                                <input type=\"radio\" class=\"reting-item\" value=\"3\" name=\"rating\"></>\n                                <input type=\"radio\" class=\"reting-item\" value=\"4\" name=\"rating\"></>\n                                <input type=\"radio\" class=\"reting-item\" value=\"5\" name=\"rating\"></>\n                            </div>\n                            </div>\n                        </div>\n                    <div class=\"library-container-about\">\n                        <h3 class=\"library-movie-title\">${filmName}</h3>     \n                        <span class=\"library-genre-title\">${genreNames}</span><span class=\"library-genre-title\"> | ${release.slice(\n        0,\n        4\n      )}</span>   \n                    </div> \n            </div>\n            </div>\n        </div>`;\n    })\n    .join('');\n}\n\ninitCatalogFetch();\n\nexport function convertRatingToPercentage(rating) {\n  // Перетворюємо рейтинг у відсотки\n  const percentage = (rating / 10) * 100;\n\n  // Округлюємо значення до двох знаків після коми\n  const roundedPercentage = Math.round(percentage * 100) / 100;\n\n  return roundedPercentage;\n}\n"],"names":["$3iMKl","parcelRequire","$9f350005b1f9b186$var$dayTrend","document","querySelector","$9f350005b1f9b186$var$paginationContainer","$9f350005b1f9b186$var$trendData","$9f350005b1f9b186$var$genres","$9f350005b1f9b186$var$currentPage","$9f350005b1f9b186$var$setupPagination","innerHTML","halfVisiblePages","Math","floor","maxVisiblePages","startPage","max","endPage","min","prevPageLink","createElement","href","textContent","addEventListener","async","console","log","trendMovieRequest","$9f350005b1f9b186$var$renderCatalog","results","total_pages","appendChild","$9f350005b1f9b186$var$addPrevPageLink","$9f350005b1f9b186$var$addPageLink","$9f350005b1f9b186$var$addEllipsis","i","totalPages","nextPageLink","$9f350005b1f9b186$var$addNextPageLink","pageNumber","pageDiv","classList","add","pageLink","toString","$9f350005b1f9b186$var$formatPageNumber","ellipsisSpan","arr","genres1","htmlMarkup","genres2","map","movie","release_date","backdrop_path","genre_ids","title","vote_average","name","first_air_date","genreNames","slice","genreId","join","filmName","release","rating","percentage","round","$9f350005b1f9b186$export$ee3a79a376c3be13","$9f350005b1f9b186$var$catalogTrendMarkup","insertAdjacentHTML","upcomingMovieGenreRequest","forEach","genre","id","err","$9f350005b1f9b186$var$initCatalogFetch"],"version":3,"file":"catalog.2ca5d3b0.js.map"}