{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,IAAIC,KACjB,IAAIC,EAAa,GACbC,EAAiB,GAyBrB,MAAMC,EAAOC,SAASC,cAAc,4BACpBD,SAASC,cAAc,mBAxBvCC,iBACE,IACE,MAAMC,EACJ,kEACIC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAGAC,QAAiBhB,EAAAiB,QAAMC,IAAI,GAAGR,IAAOC,GAC3C,GAAwB,MAApBK,EAASG,OACX,MAAM,IAAIC,MAAMJ,EAASG,QAG3B,OADaH,EAASK,I,CAEtB,MAAOC,GACPC,QAAQC,IAAIF,E,GAOhBG,GACGC,MAAKL,IACJ,MAAMM,EAAON,EAAKO,QAAQ,KACpBC,GAAEA,EAAEC,MAAEA,EAAKC,YAAEA,EAAWC,aAAEA,EAAYC,aAAEA,EAAYC,UAAEA,GAC1DP,EAEcpB,SAASC,cAAc,kBACvC2B,gBAoEJ,SAAmCC,GAEL,MAAtBC,EAAaD,EAAU,GAAM,IAKnC,OAF0BE,KAAKC,MAAmB,IAAbF,GAAoB,G,CAzErCG,CAA0BP,GA+EhDxB,iBACE,IACE,MAAMC,EAAM,4DACNC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAGAC,QAAiBhB,EAAAiB,QAAMC,IAAI,GAAGR,IAAOC,GAE3C,OADmBK,EAASK,KAAKoB,M,CAEjC,MAAOC,GACPnB,QAAQC,IAAIkB,E,EA5FZC,GACGjB,MAAKkB,IACJ,MAAMC,EAAQtC,SAASC,cAAc,UAErC,IAAK,MAAMsC,KAAaF,EAClBV,EAAUa,SAASD,EAAUjB,KAC/BzB,EAAW4C,KAAKF,EAAUG,MAG9B5C,EAAiBD,EAAW8C,KAAK,MACjCL,EAAMM,YAAc,GAAG9C,GAAgB,IAExC+C,OAAMV,GAAOnB,QAAQC,IAAIkB,KAE5B,MAAMW,EAAS,oGAC4BtB,aAAuBD,gHAE7BA,iEACjBzB,uCAEdH,EAAKoD,YAAYtB,gJAEkBG,8dAWzC7B,EAAKiD,UAAYF,CAAM,IAExBD,OAAMV,GAAOnB,QAAQC,IAAIkB,KAGrB,MAADc,EAAUjD,SAASkD,iBAAiB,WAa1C,SAASC,EAAWtB,IAKpB,SAAwBA,GACtBuB,aAAevB,EAAO5B,cAAc,kBACpCoD,YAAcxB,EAAO5B,cAAc,gB,CANnCqD,CAAezB,GASjB,SAA8B0B,EAAQF,YAAYL,WAChD,MAAMQ,EAAoBC,WAAWJ,YAAYL,WAAa,IAC9DI,aAAaM,MAAMC,MAAQ,GAAGH,I,CAV9BI,E,CAdEX,EAAQY,OAAS,GAIrB,WAEE,IAAK,IAAIC,EAAI,EAAGA,EAAIb,EAAQY,OAAQC,IAAK,CAEvCX,EADeF,EAAQa,G,EANzBC","sources":["src/js/weekly-trends.js"],"sourcesContent":["import axios from 'axios';\nconst date = new Date();\nlet genreNames = [];\nlet hewgGenreNames = '';\n\nasync function serviseFilm() {\n  try {\n    const URL =\n      'https://api.themoviedb.org/3/trending/movie/week?language=en-US';\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlOGFlZjVlODMzOTZmYmViNmY2MmU4NmNmZmViYjk4MSIsInN1YiI6IjY0ODIzMjcxZDJiMjA5MDBlYmJmM2Y5OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VO3Y1F5-wzOGPgGegX0KKGPSKeCvq8s50R1CV3r3ln0',\n      },\n    };\n    const response = await axios.get(`${URL}`, options);\n    if (response.status !== 200) {\n      throw new Error(response.status);\n    }\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst list = document.querySelector('.weekly-trends-card-list');\nconst ratindg = document.querySelector('.rating-active');\n\nserviseFilm()\n  .then(data => {\n    const film = data.results[10];\n    const { id, title, poster_path, release_date, vote_average, genre_ids } =\n      film;\n\n    const ratindg = document.querySelector('.rating-active');\n    ratingInPercent = convertRatingToPercentage(vote_average);\n\n    serviseGenre()\n      .then(genresData => {\n        const genre = document.querySelector('.genre');\n\n        for (const genreData of genresData) {\n          if (genre_ids.includes(genreData.id)) {\n            genreNames.push(genreData.name);\n          }\n        }\n        hewgGenreNames = genreNames.join(', ');\n        genre.textContent = `${hewgGenreNames}`;\n      })\n      .catch(err => console.log(err));\n\n    const markup = `<li class=\"card-film\"><div class=\"card-container\">\n  <img src = \"https://image.tmdb.org/t/p/w500${poster_path}\" alt = \"${title}\" class=\"weekly-trends-film-img\">\n  <div class=\"film-info-poster\">\n  <h3 class=\"weekly-trends-film-title\">${title}</h3><div class=\"weekly-trends-info\">\n  <span class=\"genre\">${hewgGenreNames}</span>\n  <span>|</span>\n  <span>${date.getFullYear(release_date)}</span></div></div>\n  <div class=\"rating weekly-trends-film-rating\"><div class=\"rating-body\">\n  <div class=\"rating-active\" style=\"width: ${ratingInPercent}%;\"></div>\n  <div class=\"rating-items\">\n        <input type=\"radio\" class=\"reting-item\" value=\"1\" name=\"rating\"></>\n        <input type=\"radio\" class=\"reting-item\" value=\"2\" name=\"rating\"></>\n        <input type=\"radio\" class=\"reting-item\" value=\"3\" name=\"rating\"></>\n        <input type=\"radio\" class=\"reting-item\" value=\"4\" name=\"rating\"></>\n        <input type=\"radio\" class=\"reting-item\" value=\"5\" name=\"rating\"></>\n    </div>\n</div>\n</div>\n</li>`;\n    list.innerHTML = markup;\n  })\n  .catch(err => console.log(err));\n\n//   Зірочки\nconst ratings = document.querySelectorAll('.rating');\nif (ratings.length > 0) {\n  initRatings();\n}\n\nfunction initRatings() {\n  let ratingActive, ratingValue;\n  for (let i = 0; i < ratings.length; i++) {\n    const rating = ratings[i];\n    initRating(rating);\n  }\n}\n\nfunction initRating(rating) {\n  initRatingVars(rating);\n  setRetingActiveWidth();\n}\n\nfunction initRatingVars(rating) {\n  ratingActive = rating.querySelector('.rating-active');\n  ratingValue = rating.querySelector('.rating-value');\n}\n\nfunction setRetingActiveWidth(index = ratingValue.innerHTML) {\n  const ratingActiveWidth = parseFloat(ratingValue.innerHTML) / 0.05;\n  ratingActive.style.width = `${ratingActiveWidth}%`;\n}\n\nfunction convertRatingToPercentage(rating) {\n  // Перетворюємо рейтинг у відсотки\n  const percentage = (rating / 10) * 100;\n\n  // Округлюємо значення до двох знаків після коми\n  const roundedPercentage = Math.round(percentage * 100) / 100;\n\n  return roundedPercentage;\n}\n\n// Жанри\nasync function serviseGenre() {\n  try {\n    const URL = 'https://api.themoviedb.org/3/genre/movie/list?language=en';\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlOGFlZjVlODMzOTZmYmViNmY2MmU4NmNmZmViYjk4MSIsInN1YiI6IjY0ODIzMjcxZDJiMjA5MDBlYmJmM2Y5OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VO3Y1F5-wzOGPgGegX0KKGPSKeCvq8s50R1CV3r3ln0',\n      },\n    };\n    const response = await axios.get(`${URL}`, options);\n    const genresData = response.data.genres;\n    return genresData;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n// const screenWidth = window.innerWidth;\n\n//     if (screenWidth >= 768) {\n\n//     } else {\n\n//     }\n"],"names":["$2shzp","parcelRequire","$d395fb91404b7f70$var$date","Date","$d395fb91404b7f70$var$genreNames","$d395fb91404b7f70$var$hewgGenreNames","$d395fb91404b7f70$var$list","document","querySelector","async","URL","options","method","headers","accept","Authorization","response","default","get","status","Error","data","error","console","log","$d395fb91404b7f70$var$serviseFilm","then","film","results","id","title","poster_path","release_date","vote_average","genre_ids","ratingInPercent","rating","percentage","Math","round","$d395fb91404b7f70$var$convertRatingToPercentage","genres","err","$d395fb91404b7f70$var$serviseGenre","genresData","genre","genreData","includes","push","name","join","textContent","catch","markup","getFullYear","innerHTML","$d395fb91404b7f70$var$ratings","querySelectorAll","$d395fb91404b7f70$var$initRating","ratingActive","ratingValue","$d395fb91404b7f70$var$initRatingVars","index","ratingActiveWidth","parseFloat","style","width","$d395fb91404b7f70$var$setRetingActiveWidth","length","i","$d395fb91404b7f70$var$initRatings"],"version":3,"file":"index.bc487b5e.js.map"}