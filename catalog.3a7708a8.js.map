{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,sBCAAA,EAAA,S,aAGO,MAAMC,EAAWC,SAASC,cAAc,eAClCC,EAAsBF,SAASC,cAC1C,yBAEF,IACIE,EACAC,EDCAC,ECHAC,EAAc,EAQXC,eAAeC,IACpB,IACEJ,EAAS,GACTD,QAAkB,EAAAN,EAAAY,mBAAkBH,UACX,EAAAT,EAAAa,8BAEdC,SAAQC,IACjBR,EAAOQ,EAAMC,IAAMD,EAAME,IAAI,IAG/BC,EAAcZ,EAAUa,QAASZ,GAEjCa,G,CACA,MAAOC,GACPC,QAAQC,IAAIF,E,EAIhB,SAASD,IACP,IAAII,EAAalB,EAAUmB,YAC3BpB,EAAoBqB,UAAY,GAEhC,MACMC,EAAmBC,KAAKC,MAAMC,KAEpC,IAAIC,EAAYH,KAAKI,IAAIvB,EAAckB,EAAkB,GACrDM,EAAUL,KAAKM,IAAIH,EAJC,EAI6B,EAAGP,GAEpDS,EAAUF,EAAY,EANF,IAOtBA,EAAYH,KAAKI,IAAIC,EAPC,EAO2B,EAAG,IAGlDxB,EAAc,GA+DpB,WACE,MAAM0B,EAAehC,SAASiC,cAAc,KAC5CD,EAAaE,KAAO,IACpBF,EAAaG,YAAc,IAC3BH,EAAaI,iBAAiB,SAAS7B,iBACrCD,GAAe,EACfa,QAAQC,IAAId,GACZH,QAAkB,EAAAN,EAAAY,mBAAkBH,GACpCS,EAAcZ,EAAUa,QAASZ,GACjCa,EAAgBd,EAAUmB,Y,IAE5BpB,EAAoBmC,YAAYL,E,CAzE9BM,GAGEV,EAAY,IACdW,EAAY,GACRX,EAAY,GACdY,KAIJ,IAAK,IAAIC,EAAIb,EAAWa,GAAKX,EAASW,IACpCF,EAAYE,GAGVX,EAAUT,IACRS,EAAUT,EAAa,GACzBmB,IAE8BD,EAApBlB,IAGVf,EAAce,GAuDpB,WACE,MAAMqB,EAAe1C,SAASiC,cAAc,KAC5CS,EAAaR,KAAO,IACpBQ,EAAaP,YAAc,IAC3BO,EAAaN,iBAAiB,SAAS7B,iBACrCD,GAAe,EACfa,QAAQC,IAAId,GACZH,QAAkB,EAAAN,EAAAY,mBAAkBH,GACpCS,EAAcZ,EAAUa,QAASZ,GACjCa,EAAgBd,EAAUmB,Y,IAE5BpB,EAAoBmC,YAAYK,E,CAjE9BC,E,CAIJ,SAASJ,EAAYK,GACnB,MAAMC,EAAU7C,SAASiC,cAAc,OACvCY,EAAQC,UAAUC,IAAI,eACtB,MAAMC,EAAWhD,SAASiC,cAAc,KACxCe,EAASF,UAAY,0BACrBE,EAASd,KAAO,IAChBc,EAASb,YAAcc,EAAiBL,GAEpCA,IAAetC,IACjB0C,EAASF,UAAUC,IAAI,UACvBF,EAAQC,UAAUC,IAAI,WAGxBC,EAASZ,iBAAiB,SAAS7B,iBACjCD,EAAcsC,EACdzB,QAAQC,IAAId,GACZH,QAAkB,EAAAN,EAAAY,mBAAkBH,GACpCS,EAAcZ,EAAUa,QAASZ,GACjCa,EAAgBd,EAAUmB,Y,IAG5BuB,EAAQR,YAAYW,GACpB9C,EAAoBmC,YAAYQ,E,CAG3B,SAASI,EAAiBL,GAEY,OAApCA,EAAa,GAAK,IAAIA,IAAeA,EAAWM,U,CAGlD,SAASV,IACd,MAAMW,EAAenD,SAASiC,cAAc,QAC5CkB,EAAahB,YAAc,MAC3BjC,EAAoBmC,YAAYc,E,CA+B3B,SAASpC,EAAcqC,EAAKC,GACjCtD,EAASwB,UAAY,GAErB,MAAM+B,EAID,SAA4BF,EAAKG,GACtC,OAAOH,EACJI,KAAIC,IACH,MAAMC,aACJA,EAAYC,cACZA,EAAaC,UACbA,EAASC,MACTA,EAAKC,aACLA,EAAYhD,KACZA,EAAIiD,YACJA,GACEN,EAIEO,EAFaJ,EAGhBJ,KAAIS,GACIV,EAAOU,KAEfC,KAAK,MAG4B,IAAhCC,EAIFA,EAHGN,GACQ/C,EAKb,IAKIsD,EALAC,EAAUX,EAAaY,MAAM,EAAG,GAcpC,OAbKD,GAAuB,KAAZA,IACdA,EAAU,WASVD,EALGT,GAAkBI,EAEXJ,GACDI,EAFA,mCAOJ,4JACwGK,4LA4B9G,SAAmCG,GAEZ,MAAtBC,EAAaD,EAAU,GAAM,IAKnC,OAF0B9C,KAAKgD,MAAmB,IAAbD,GAAoB,G,CA9BYE,CACzCZ,6xBAY4BK,0EACEH,gDAAyDK,kGAItG,IAEVH,KAAK,G,CAvEWS,CAAmBvB,EAAKC,GAC3CtD,EAAS6E,mBAAmB,YAAatB,E,CAyE3C9C,ID5MA,IACIqE,EADAC,EAAc,EAEdC,GAAoB,EAExB,MAAMC,EAAahF,SAASC,cAAc,iBACpCgF,EAAiBjF,SAASC,cAAc,sBACxCiF,EAAalF,SAASC,cAAc,qBAoE1C,SAASkF,EAAsBC,GAC7B,IAAKL,EACH,OAEF,IAAI1D,EAAa+D,EAEjBlF,EAAoBqB,UAAY,GAEhC,MACMC,EAAmBC,KAAKC,MAAMC,KAEpC,IAAIC,EAAYH,KAAKI,IAAIiD,EAActD,EAAkB,GACrDM,EAAUL,KAAKM,IAAIH,EAJC,EAI6B,EAAGP,GAEpDS,EAAUF,EAAY,EANF,IAOtBA,EAAYH,KAAKI,IAAIC,EAPC,EAO2B,EAAG,IAGlDgD,EAAc,GAuDpB,WACE,MAAM9C,EAAehC,SAASiC,cAAc,KAC5CD,EAAaE,KAAO,IACpBF,EAAaG,YAAc,IAC3BH,EAAaI,iBAAiB,SAAS7B,iBACrCuE,GAAe,EACf3D,QAAQC,IAAI0D,GACZ,MAAMO,QAAqB,EAAAxF,EAAAyF,eAAcC,QAASC,SAAUV,GAC5D/D,EAAcsE,EAAarE,QAASX,GACpC8E,EAAsBE,EAAa/D,Y,IAErCpB,EAAoBmC,YAAYL,E,CAjE9ByD,GAGE7D,EAAY,IACd8D,EAAY,GACR9D,EAAY,GACdY,KAIJ,IAAK,IAAIC,EAAIb,EAAWa,GAAKX,EAASW,IACpCiD,EAAYjD,GAGVX,EAAUT,IACRS,EAAUT,EAAa,GACzBmB,IAE8BkD,EAApBrE,IAGVyD,EAAczD,GA+CpB,WACE,MAAMqB,EAAe1C,SAASiC,cAAc,KAC5CS,EAAaR,KAAO,IACpBQ,EAAaP,YAAc,IAC3BO,EAAaN,iBAAiB,SAAS7B,iBACrCuE,GAAe,EACf3D,QAAQC,IAAI0D,GACZ,MAAMa,QAAqB,EAAA9F,EAAAyF,eAAcC,QAASC,SAAUV,GAC5D/D,EAAc4E,EAAa3E,QAASX,GACpC8E,EAAsBQ,EAAarE,Y,IAErCpB,EAAoBmC,YAAYK,E,CAzD9BkD,E,CAIJ,SAASF,EAAY9C,GACnB,MAAMC,EAAU7C,SAASiC,cAAc,OACvCY,EAAQC,UAAUC,IAAI,eACtB,MAAMC,EAAWhD,SAASiC,cAAc,KACxCe,EAASF,UAAY,0BACrBE,EAASd,KAAO,IAChBc,EAASb,YAAcc,EAAiBL,GAEpCA,IAAekC,IACjB9B,EAASF,UAAUC,IAAI,UACvBF,EAAQC,UAAUC,IAAI,WAGxBC,EAASZ,iBAAiB,SAAS7B,iBAC5BwE,IAGLD,EAAclC,EACdzB,QAAQC,IAAI0D,GACZD,QAAqB,EAAAhF,EAAAyF,eAAcC,QAASC,SAAUV,GACtD/D,EAAc8D,EAAa7D,QAASX,GACpC8E,EAAsBN,EAAavD,a,IAGrCuB,EAAQR,YAAYW,GACpB9C,EAAoBmC,YAAYQ,E,CAxIlC1B,QAAQC,IAAI4D,GACZ7D,QAAQC,IAAI6D,GAEZ,WACE,MAAMY,GAAc,IAAIC,MAAOC,cAE/B,IAAK,IAAItD,EAAI,KAAMA,GAAKoD,EAAapD,IAAK,CACxC,MAAMuD,EAAShG,SAASiC,cAAc,UACtC+D,EAAOlD,UAAUC,IAAI,gBACrBiD,EAAOC,MAAQxD,EACfuD,EAAOE,KAAOzD,EACdyC,EAAW7C,YAAY2D,E,EAI3BG,GAEAnB,EAAW5C,iBAAiB,UAE5B7B,eAA4B6F,GAC1B,IACEA,EAAIC,iBACJnG,EAAoBqB,UAAY,GAEhClB,EAAS,GAETkF,QAAUa,EAAIE,cAAcC,SAASC,mBAAmBP,MACxDT,SAAWY,EAAIE,cAAcC,SAASE,OAAOR,MAE7CpB,QAAqB,EAAAhF,EAAAyF,eAAcC,QAASC,SAAUV,UAC7B,EAAAjF,EAAAa,8BAEdC,SAAQC,IACjBP,EAAOO,EAAMC,IAAMD,EAAME,IAAI,IAGR,IAAnByE,QAAQmB,SACV3G,EAASwB,UAAY,GACrBf,KAGE+E,QAAQmB,OAAS,IACnB3G,EAASwB,UAAY,GACrBR,EAAc8D,EAAa7D,QAASX,IAGF,IAAhCwE,EAAa7D,QAAQ0F,QACvB3B,GAAoB,EACpBhF,EAASwB,UAAY,6JAIrBwD,GAAoB,EAMpB7E,EAAoByG,MAAMC,QAHvB7B,EAGiC,OAFA,OAItCI,EAAsBN,EAAavD,Y,CACnC,MAAOJ,GACPC,QAAQC,IAAIF,E","sources":["src/js/search.js","src/js/catalog.js"],"sourcesContent":["import { searchRequest } from './apikey';\nimport { upcomingMovieGenreRequest } from './apikey';\nimport Notiflix from 'notiflix';\nimport { renderCatalog } from './catalog';\nimport { dayTrend } from './catalog';\nimport { paginationContainer } from './catalog';\nimport { formatPageNumber } from './catalog';\nimport { addEllipsis } from './catalog';\nimport { initCatalogFetch } from './catalog';\n\nlet genres;\nlet currentPage = 1;\nlet movieRequest;\nlet paginationVisible = true;\n\nconst searchForm = document.querySelector('.catalog-form');\nconst filmSearchList = document.querySelector('.js-catalog-search');\nconst yearSelect = document.querySelector('#js-search-select');\n\nconsole.log(searchForm);\nconsole.log(filmSearchList);\n\nfunction createSelect() {\n  const currentYear = new Date().getFullYear();\n\n  for (let i = 1940; i <= currentYear; i++) {\n    const option = document.createElement('option');\n    option.classList.add('selectOption');\n    option.value = i;\n    option.text = i;\n    yearSelect.appendChild(option);\n  }\n}\n\ncreateSelect();\n\nsearchForm.addEventListener('submit', handleSearch);\n\nasync function handleSearch(evt) {\n  try {\n    evt.preventDefault();\n    paginationContainer.innerHTML = '';\n\n    genres = {};\n\n    formEvt = evt.currentTarget.elements.catalogSearchQuery.value;\n    formYear = evt.currentTarget.elements.select.value;\n\n    movieRequest = await searchRequest(formEvt, formYear, currentPage);\n    const genresData = await upcomingMovieGenreRequest();\n\n    genresData.forEach(genre => {\n      genres[genre.id] = genre.name;\n    });\n\n    if (formEvt.length === 0) {\n      dayTrend.innerHTML = '';\n      initCatalogFetch();\n    }\n\n    if (formEvt.length > 1) {\n      dayTrend.innerHTML = '';\n      renderCatalog(movieRequest.results, genres);\n    }\n\n    if (movieRequest.results.length === 0) {\n      paginationVisible = false;\n      dayTrend.innerHTML = `<div class=\"opsContainer\">\n        <p class=\"opsText\">OOPS...<br>We are very sorry!<br>We don't have any results matching your search</p>\n      </div>`;\n    } else {\n      paginationVisible = true;\n    }\n\n    if (!paginationVisible) {\n      paginationContainer.style.display = 'none';\n    } else {\n      paginationContainer.style.display = 'flex';\n    }\n    setupPaginationSearch(movieRequest.total_pages);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction setupPaginationSearch(movieTotalPages) {\n  if (!paginationVisible) {\n    return;\n  }\n  let totalPages = movieTotalPages;\n\n  paginationContainer.innerHTML = '';\n\n  const maxVisiblePages = 5; // Максимальное количество видимых страниц, включая символ \"...\"\n  const halfVisiblePages = Math.floor(maxVisiblePages / 2);\n\n  let startPage = Math.max(currentPage - halfVisiblePages, 1);\n  let endPage = Math.min(startPage + maxVisiblePages - 1, totalPages);\n\n  if (endPage - startPage + 1 < maxVisiblePages) {\n    startPage = Math.max(endPage - maxVisiblePages + 1, 1);\n  }\n\n  if (currentPage > 1) {\n    addPrevPageLink(); // Добавляем стрелку \"<\" для перехода на предыдущую страницу\n  }\n\n  if (startPage > 1) {\n    addPageLink(1); // Добавляем ссылку на первую страницу\n    if (startPage > 2) {\n      addEllipsis(); // Добавляем символ \"...\" для скрытых страниц\n    }\n  }\n\n  for (let i = startPage; i <= endPage; i++) {\n    addPageLink(i); // Добавляем ссылки на видимые страницы\n  }\n\n  if (endPage < totalPages) {\n    if (endPage < totalPages - 1) {\n      addEllipsis(); // Добавляем символ \"...\" для скрытых страниц\n    }\n    addPageLink(totalPages); // Добавляем ссылку на последнюю страницу\n  }\n\n  if (currentPage < totalPages) {\n    addNextPageLink(); // Добавляем стрелку \">\" для перехода на следующую страницу\n  }\n}\n\nfunction addPageLink(pageNumber) {\n  const pageDiv = document.createElement('div');\n  pageDiv.classList.add('page-number');\n  const pageLink = document.createElement('a');\n  pageLink.classList = 'catalog-pagination-link';\n  pageLink.href = '#';\n  pageLink.textContent = formatPageNumber(pageNumber);\n\n  if (pageNumber === currentPage) {\n    pageLink.classList.add('active');\n    pageDiv.classList.add('active');\n  }\n\n  pageLink.addEventListener('click', async function () {\n    if (!paginationVisible) {\n      return;\n    }\n    currentPage = pageNumber;\n    console.log(currentPage);\n    movieRequest = await searchRequest(formEvt, formYear, currentPage);\n    renderCatalog(movieRequest.results, genres);\n    setupPaginationSearch(movieRequest.total_pages);\n  });\n\n  pageDiv.appendChild(pageLink);\n  paginationContainer.appendChild(pageDiv);\n}\n\nfunction addPrevPageLink() {\n  const prevPageLink = document.createElement('a');\n  prevPageLink.href = '#';\n  prevPageLink.textContent = '<';\n  prevPageLink.addEventListener('click', async function () {\n    currentPage -= 1;\n    console.log(currentPage);\n    const movieRequest = await searchRequest(formEvt, formYear, currentPage);\n    renderCatalog(movieRequest.results, genres);\n    setupPaginationSearch(movieRequest.total_pages);\n  });\n  paginationContainer.appendChild(prevPageLink);\n}\n\nfunction addNextPageLink() {\n  const nextPageLink = document.createElement('a');\n  nextPageLink.href = '#';\n  nextPageLink.textContent = '>';\n  nextPageLink.addEventListener('click', async function () {\n    currentPage += 1;\n    console.log(currentPage);\n    const movieRequest = await searchRequest(formEvt, formYear, currentPage);\n    renderCatalog(movieRequest.results, genres);\n    setupPaginationSearch(movieRequest.total_pages);\n  });\n  paginationContainer.appendChild(nextPageLink);\n}\n\n// function addWrongBtn() {\n//   dayTrend.innerHTML = `<div><p class=\"opsText\">OOPS... <br> We are very sorry!<br> You don't have any movies at your library </p>\n//   </div>`;\n//   const wrongBtn = document.createElement('button');\n//   wrongBtn.classList.add('wrongBtn');\n//   wrongBtn.textContent = 'Search Movie';\n//   dayTrend.append(wrongBtn);\n//   paginationContainer.style.display = 'none';\n//   searchForm.style.display = 'none';\n\n//   wrongBtn.addEventListener('click', () => {\n//     searchForm.reset();\n//     initCatalogFetch();\n//     handleSearch();\n//     paginationContainer.style.display = 'flex';\n//     searchForm.style.display = 'flex';\n//   });\n// }\n","import { trendMovieRequest } from './apikey.js';\nimport { upcomingMovieGenreRequest } from './apikey.js';\n\nexport const dayTrend = document.querySelector('.catalog-js');\nexport const paginationContainer = document.querySelector(\n  '.pagination-container'\n);\nlet currentPage = 1;\nlet trendData;\nlet genres;\n\n///////////\n\n///////////\n\nexport async function initCatalogFetch() {\n  try {\n    genres = {};\n    trendData = await trendMovieRequest(currentPage);\n    const genresData = await upcomingMovieGenreRequest();\n\n    genresData.forEach(genre => {\n      genres[genre.id] = genre.name;\n    });\n\n    renderCatalog(trendData.results, genres);\n\n    setupPagination();\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction setupPagination() {\n  let totalPages = trendData.total_pages;\n  paginationContainer.innerHTML = '';\n\n  const maxVisiblePages = 5; // Максимальное количество видимых страниц, включая символ \"...\"\n  const halfVisiblePages = Math.floor(maxVisiblePages / 2);\n\n  let startPage = Math.max(currentPage - halfVisiblePages, 1);\n  let endPage = Math.min(startPage + maxVisiblePages - 1, totalPages);\n\n  if (endPage - startPage + 1 < maxVisiblePages) {\n    startPage = Math.max(endPage - maxVisiblePages + 1, 1);\n  }\n\n  if (currentPage > 1) {\n    addPrevPageLink(); // Добавляем стрелку \"<\" для перехода на предыдущую страницу\n  }\n\n  if (startPage > 1) {\n    addPageLink(1); // Добавляем ссылку на первую страницу\n    if (startPage > 2) {\n      addEllipsis(); // Добавляем символ \"...\" для скрытых страниц\n    }\n  }\n\n  for (let i = startPage; i <= endPage; i++) {\n    addPageLink(i); // Добавляем ссылки на видимые страницы\n  }\n\n  if (endPage < totalPages) {\n    if (endPage < totalPages - 1) {\n      addEllipsis(); // Добавляем символ \"...\" для скрытых страниц\n    }\n    addPageLink(totalPages); // Добавляем ссылку на последнюю страницу\n  }\n\n  if (currentPage < totalPages) {\n    addNextPageLink(); // Добавляем стрелку \">\" для перехода на следующую страницу\n  }\n}\n\nfunction addPageLink(pageNumber) {\n  const pageDiv = document.createElement('div');\n  pageDiv.classList.add('page-number');\n  const pageLink = document.createElement('a');\n  pageLink.classList = 'catalog-pagination-link';\n  pageLink.href = '#';\n  pageLink.textContent = formatPageNumber(pageNumber);\n\n  if (pageNumber === currentPage) {\n    pageLink.classList.add('active');\n    pageDiv.classList.add('active');\n  }\n\n  pageLink.addEventListener('click', async function () {\n    currentPage = pageNumber;\n    console.log(currentPage);\n    trendData = await trendMovieRequest(currentPage);\n    renderCatalog(trendData.results, genres);\n    setupPagination(trendData.total_pages);\n  });\n\n  pageDiv.appendChild(pageLink);\n  paginationContainer.appendChild(pageDiv);\n}\n\nexport function formatPageNumber(pageNumber) {\n  // Добавляем ведущий ноль, если номер страницы меньше 10\n  return pageNumber < 10 ? `0${pageNumber}` : pageNumber.toString();\n}\n\nexport function addEllipsis() {\n  const ellipsisSpan = document.createElement('span');\n  ellipsisSpan.textContent = '...';\n  paginationContainer.appendChild(ellipsisSpan);\n}\n\nfunction addPrevPageLink() {\n  const prevPageLink = document.createElement('a');\n  prevPageLink.href = '#';\n  prevPageLink.textContent = '<';\n  prevPageLink.addEventListener('click', async function () {\n    currentPage -= 1;\n    console.log(currentPage);\n    trendData = await trendMovieRequest(currentPage);\n    renderCatalog(trendData.results, genres);\n    setupPagination(trendData.total_pages);\n  });\n  paginationContainer.appendChild(prevPageLink);\n}\n\nfunction addNextPageLink() {\n  const nextPageLink = document.createElement('a');\n  nextPageLink.href = '#';\n  nextPageLink.textContent = '>';\n  nextPageLink.addEventListener('click', async function () {\n    currentPage += 1;\n    console.log(currentPage);\n    trendData = await trendMovieRequest(currentPage);\n    renderCatalog(trendData.results, genres);\n    setupPagination(trendData.total_pages);\n  });\n  paginationContainer.appendChild(nextPageLink);\n}\n\nexport function renderCatalog(arr, genres) {\n  dayTrend.innerHTML = ''; // Clear the container\n\n  const htmlMarkup = catalogTrendMarkup(arr, genres);\n  dayTrend.insertAdjacentHTML('beforeend', htmlMarkup);\n}\n\nexport function catalogTrendMarkup(arr, genres) {\n  return arr\n    .map(movie => {\n      const {\n        release_date,\n        backdrop_path,\n        genre_ids,\n        title,\n        vote_average,\n        name,\n        poster_path,\n      } = movie;\n\n      const genreSlice = genre_ids;\n\n      const genreNames = genreSlice\n        .map(genreId => {\n          return genres[genreId];\n        })\n        .join(', ');\n\n      //с бэкэнда на некоторые фильмы приходит не title, а name\n      let filmName;\n      if (!title) {\n        filmName = name;\n      } else {\n        filmName = title;\n      }\n\n      let release = release_date.slice(0, 4);\n      if (!release || release === '') {\n        release = 'unknown';\n      }\n\n      let poster;\n      if (!backdrop_path && !poster_path) {\n        poster = '/vL5LR6WdxWPjLPFRLe133jXWsh5.jpg';\n      } else if (!backdrop_path) {\n        poster = poster_path;\n      } else {\n        poster = backdrop_path;\n      }\n\n      return `<div class=\"library-container-item\">\n                <div class=\"library-container-img\" style=\"background-image: url(https://image.tmdb.org/t/p/original${poster});\">\n                <div class=\"rating-libr rating-library\">\n                        <div class=\"rating-body\">\n                            <div class=\"rating-active\" style=\"width: ${convertRatingToPercentage(\n                              vote_average\n                            )}%;\"></div>\n                            <div class=\"rating-items\">\n                                <input type=\"radio\" class=\"reting-item\" value=\"1\" name=\"rating\"></>\n                                <input type=\"radio\" class=\"reting-item\" value=\"2\" name=\"rating\"></>\n                                <input type=\"radio\" class=\"reting-item\" value=\"3\" name=\"rating\"></>\n                                <input type=\"radio\" class=\"reting-item\" value=\"4\" name=\"rating\"></>\n                                <input type=\"radio\" class=\"reting-item\" value=\"5\" name=\"rating\"></>\n                            </div>\n                            </div>\n                        </div>\n                    <div class=\"library-container-about\">\n                        <h3 class=\"library-movie-title\">${filmName}</h3>     \n                        <span class=\"library-genre-title\">${genreNames}</span><span class=\"library-genre-title\"> | ${release}</span>   \n                    </div> \n            </div>\n            </div>\n        </div>`;\n    })\n    .join('');\n}\n\ninitCatalogFetch();\n\nexport function convertRatingToPercentage(rating) {\n  // Перетворюємо рейтинг у відсотки\n  const percentage = (rating / 10) * 100;\n\n  // Округлюємо значення до двох знаків після коми\n  const roundedPercentage = Math.round(percentage * 100) / 100;\n\n  return roundedPercentage;\n}\n"],"names":["$3iMKl","parcelRequire","$9f350005b1f9b186$export$65b190bf57aeec48","document","querySelector","$9f350005b1f9b186$export$5dd819bdfbc7b15d","$9f350005b1f9b186$var$trendData","$9f350005b1f9b186$var$genres","$b18fd23e9761f35d$var$genres","$9f350005b1f9b186$var$currentPage","async","$9f350005b1f9b186$export$ac223bdbc578cc64","trendMovieRequest","upcomingMovieGenreRequest","forEach","genre","id","name","$9f350005b1f9b186$export$6d2cdb15d4f6744","results","$9f350005b1f9b186$var$setupPagination","err","console","log","totalPages","total_pages","innerHTML","halfVisiblePages","Math","floor","maxVisiblePages","startPage","max","endPage","min","prevPageLink","createElement","href","textContent","addEventListener","appendChild","$9f350005b1f9b186$var$addPrevPageLink","$9f350005b1f9b186$var$addPageLink","$9f350005b1f9b186$export$92eb9173bebbaa4a","i","nextPageLink","$9f350005b1f9b186$var$addNextPageLink","pageNumber","pageDiv","classList","add","pageLink","$9f350005b1f9b186$export$6fdc1d5fc92215b9","toString","ellipsisSpan","arr","genres1","htmlMarkup","genres2","map","movie","release_date","backdrop_path","genre_ids","title","vote_average","poster_path","genreNames","genreId","join","filmName","poster","release","slice","rating","percentage","round","$9f350005b1f9b186$export$ee3a79a376c3be13","$9f350005b1f9b186$export$8a70c9415fcb563f","insertAdjacentHTML","$b18fd23e9761f35d$var$movieRequest","$b18fd23e9761f35d$var$currentPage","$b18fd23e9761f35d$var$paginationVisible","$b18fd23e9761f35d$var$searchForm","$b18fd23e9761f35d$var$filmSearchList","$b18fd23e9761f35d$var$yearSelect","$b18fd23e9761f35d$var$setupPaginationSearch","movieTotalPages","movieRequest1","searchRequest","formEvt","formYear","$b18fd23e9761f35d$var$addPrevPageLink","$b18fd23e9761f35d$var$addPageLink","movieRequest2","$b18fd23e9761f35d$var$addNextPageLink","currentYear","Date","getFullYear","option","value","text","$b18fd23e9761f35d$var$createSelect","evt","preventDefault","currentTarget","elements","catalogSearchQuery","select","length","style","display"],"version":3,"file":"catalog.3a7708a8.js.map"}